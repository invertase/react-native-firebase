{
	"id": 0,
	"name": "@react-native-firebase/analytics",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 40,
			"name": "\"@react-native-firebase/analytics\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 43,
					"name": "AnalyticsDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "analytics/lib/index.d.ts",
							"line": 232,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 3
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 2
							}
						]
					}
				},
				{
					"id": 41,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "analytics/lib/index.d.ts",
							"line": 222,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 42,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "```js\nimport { firebase } from '@react-native-firebase/analytics';\nfirebase.analytics().logEvent(...);\n```"
					},
					"sources": [
						{
							"fileName": "analytics/lib/index.d.ts",
							"line": 230,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						43,
						41,
						42
					]
				}
			],
			"sources": [
				{
					"fileName": "analytics/lib/index.d.ts",
					"line": 219,
					"character": 49
				}
			]
		},
		{
			"id": 50,
			"name": "\"@react-native-firebase/app\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "firebase",
						"text": "firebase\n"
					}
				]
			},
			"children": [
				{
					"id": 51,
					"name": "ReactNativeFirebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "app/lib/index.d.ts",
							"line": 25,
							"character": 27
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						51
					]
				}
			],
			"sources": [
				{
					"fileName": "app/lib/index.d.ts",
					"line": 23,
					"character": 43
				}
			]
		},
		{
			"id": 44,
			"name": "\"@react-native-firebase/app-types\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"shortText": "Attach namespace to `firebase.` and `FirebaseApp.`."
			},
			"children": [
				{
					"id": 47,
					"name": "FirebaseApp",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 48,
							"name": "analytics",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 49,
									"name": "analytics",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 3
									}
								}
							],
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 252,
									"character": 13
								}
							]
						},
						{
							"id": 339,
							"name": "auth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 340,
									"name": "auth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Auth"
									},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 247
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 561,
									"character": 8
								}
							]
						},
						{
							"id": 393,
							"name": "config",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 394,
									"name": "config",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Firebase Remote Config is a cloud service that lets you change the behavior and appearance of your\napp without requiring users to download an app update. When using Remote Config, you create in-app default\nvalues that control the behavior and appearance of your app."
									},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 358
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 395,
									"character": 10
								}
							]
						},
						{
							"id": 435,
							"name": "crashlytics",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 436,
									"name": "crashlytics",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Firebase Crashlytics helps you track, prioritize, and fix stability issues that erode app quality, in realtime.\nSpend less time triaging and troubleshooting crashes and more time building app features that delight users."
									},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 397
									}
								}
							],
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 276,
									"character": 15
								}
							]
						},
						{
							"id": 454,
							"name": "fiam",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 455,
									"name": "fiam",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Firebase In-App Messaging helps you engage users who are actively using your app by sending\nthem targeted and contextual messages that nudge them to complete key in-app actions - like\nbeating a game level, buying an item, or subscribing to content."
									},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 439
									}
								}
							],
							"sources": [
								{
									"fileName": "fiam/lib/index.d.ts",
									"line": 181,
									"character": 8
								}
							]
						},
						{
							"id": 465,
							"name": "firestore",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 466,
									"name": "firestore",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Firestore"
									},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 458
									}
								}
							],
							"sources": [
								{
									"fileName": "firestore/lib/index.d.ts",
									"line": 135,
									"character": 13
								}
							]
						},
						{
							"id": 514,
							"name": "functions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 515,
									"name": "functions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The Cloud Functions for Firebase client SDKs let you call functions\ndirectly from a Firebase app. To call a function from your app in this way,\nwrite and deploy an HTTPS Callable function in Cloud Functions,\nand then add client logic to call the function from your app."
									},
									"parameters": [
										{
											"id": 516,
											"name": "region",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The region you deployed your functions to. Defaults to 'us-central1'.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 500
									}
								}
							],
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 393,
									"character": 13
								}
							]
						},
						{
							"id": 538,
							"name": "iid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 539,
									"name": "iid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Firebase Instance ID provides a unique identifier for each instance of your app and a mechanism to authenticate\nand authorize actions for it (for example: sending FCM messages).",
										"text": "An Instance ID is long lived except when you call delete, the app is restored on a new device, the user\nuninstalls/reinstall the app or the user clears the app data (clearing data applies to Android only).\n\n"
									},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 519
									}
								}
							],
							"sources": [
								{
									"fileName": "iid/lib/index.d.ts",
									"line": 187,
									"character": 7
								}
							]
						},
						{
							"id": 605,
							"name": "invites",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 606,
									"name": "invites",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<b>Firebase Invites is deprecated</b>. You can create cross-platform invitation links that survive app installation using Firebase Dynamic Links instead.\nFirebase Invites are an out-of-the-box solution for app referrals and sharing via email or SMS.\nTo customize the invitation user experience, or to generate links programmatically, use Firebase Dynamic Links."
									},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 582
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 455,
									"character": 11
								}
							]
						},
						{
							"id": 616,
							"name": "mlkit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 617,
									"name": "mlkit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Mlkit"
									},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 609
									}
								}
							],
							"sources": [
								{
									"fileName": "mlkit/lib/index.d.ts",
									"line": 127,
									"character": 9
								}
							]
						},
						{
							"id": 705,
							"name": "perf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 706,
									"name": "perf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perf"
									},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 683
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 484,
									"character": 8
								}
							]
						},
						{
							"id": 881,
							"name": "storage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 882,
									"name": "storage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 883,
											"name": "bucket",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 856
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 955,
									"character": 11
								}
							]
						},
						{
							"id": 56,
							"name": "utils",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 57,
									"name": "utils",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 58,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "FirebaseApp",
												"id": 47
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FirebaseUtilsModule"
									}
								},
								{
									"id": 893,
									"name": "utils",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Utils"
									},
									"type": {
										"type": "reference",
										"name": "Module",
										"id": 886
									}
								}
							],
							"sources": [
								{
									"fileName": "app/lib/index.d.ts",
									"line": 37,
									"character": 9
								},
								{
									"fileName": "utils/lib/index.d.ts",
									"line": 134,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								48,
								339,
								393,
								435,
								454,
								465,
								514,
								538,
								605,
								616,
								705,
								881,
								56
							]
						}
					],
					"sources": [
						{
							"fileName": "analytics/lib/index.d.ts",
							"line": 251,
							"character": 23
						},
						{
							"fileName": "app/lib/index.d.ts",
							"line": 36,
							"character": 23
						},
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 557,
							"character": 23
						},
						{
							"fileName": "config/lib/index.d.ts",
							"line": 389,
							"character": 23
						},
						{
							"fileName": "crashlytics/lib/index.d.ts",
							"line": 271,
							"character": 23
						},
						{
							"fileName": "fiam/lib/index.d.ts",
							"line": 175,
							"character": 23
						},
						{
							"fileName": "firestore/lib/index.d.ts",
							"line": 131,
							"character": 23
						},
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 384,
							"character": 23
						},
						{
							"fileName": "iid/lib/index.d.ts",
							"line": 178,
							"character": 23
						},
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 448,
							"character": 23
						},
						{
							"fileName": "mlkit/lib/index.d.ts",
							"line": 123,
							"character": 23
						},
						{
							"fileName": "perf/lib/index.d.ts",
							"line": 480,
							"character": 23
						},
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 954,
							"character": 23
						},
						{
							"fileName": "utils/lib/index.d.ts",
							"line": 130,
							"character": 23
						}
					]
				},
				{
					"id": 45,
					"name": "ReactNativeFirebaseNamespace",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 46,
							"name": "analytics",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 245,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 3
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 2
									}
								]
							}
						},
						{
							"id": 338,
							"name": "auth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Auth"
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 554,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 247
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 90
									}
								]
							}
						},
						{
							"id": 392,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Firebase Remote Config is a cloud service that lets you change the behavior and appearance of your\napp without requiring users to download an app update. When using Remote Config, you create in-app default\nvalues that control the behavior and appearance of your app."
							},
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 386,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 358
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 342
									}
								]
							}
						},
						{
							"id": 434,
							"name": "crashlytics",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Firebase Crashlytics helps you track, prioritize, and fix stability issues that erode app quality, in realtime.\nSpend less time triaging and troubleshooting crashes and more time building app features that delight users."
							},
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 268,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 397
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 396
									}
								]
							}
						},
						{
							"id": 453,
							"name": "fiam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Firebase In-App Messaging helps you engage users who are actively using your app by sending\nthem targeted and contextual messages that nudge them to complete key in-app actions - like\nbeating a game level, buying an item, or subscribing to content."
							},
							"sources": [
								{
									"fileName": "fiam/lib/index.d.ts",
									"line": 172,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 439
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 438
									}
								]
							}
						},
						{
							"id": 464,
							"name": "firestore",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Firestore"
							},
							"sources": [
								{
									"fileName": "firestore/lib/index.d.ts",
									"line": 125,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 458
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 457
									}
								]
							}
						},
						{
							"id": 513,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The Cloud Functions for Firebase client SDKs let you call functions\ndirectly from a Firebase app. To call a function from your app in this way,\nwrite and deploy an HTTPS Callable function in Cloud Functions,\nand then add client logic to call the function from your app."
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 381,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStaticsWithApp",
								"id": 966,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 500
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 498
									}
								]
							}
						},
						{
							"id": 537,
							"name": "iid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Firebase Instance ID provides a unique identifier for each instance of your app and a mechanism to authenticate\nand authorize actions for it (for example: sending FCM messages).",
								"text": "An Instance ID is long lived except when you call delete, the app is restored on a new device, the user\nuninstalls/reinstall the app or the user clears the app data (clearing data applies to Android only).\n"
							},
							"sources": [
								{
									"fileName": "iid/lib/index.d.ts",
									"line": 175,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStaticsWithApp",
								"id": 966,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 519
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 518
									}
								]
							}
						},
						{
							"id": 604,
							"name": "invites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "<b>Firebase Invites is deprecated</b>. You can create cross-platform invitation links that survive app installation using Firebase Dynamic Links instead.\nFirebase Invites are an out-of-the-box solution for app referrals and sharing via email or SMS.\nTo customize the invitation user experience, or to generate links programmatically, use Firebase Dynamic Links."
							},
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 445,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 582
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 541
									}
								]
							}
						},
						{
							"id": 615,
							"name": "mlkit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Mlkit"
							},
							"sources": [
								{
									"fileName": "mlkit/lib/index.d.ts",
									"line": 117,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 609
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 608
									}
								]
							}
						},
						{
							"id": 704,
							"name": "perf",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Get insights into how your app performs from your users’ point of view, with automatic and customized performance tracing."
							},
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 477,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 683
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 682
									}
								]
							}
						},
						{
							"id": 880,
							"name": "storage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 951,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 856
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 731
									}
								]
							}
						},
						{
							"id": 52,
							"name": "utils",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Utils provides a collection of utilities to aid in using Firebase\nand related services inside React Native, e.g. Test Lab helpers\nand Google Play Services version helpers."
							},
							"sources": [
								{
									"fileName": "app/lib/index.d.ts",
									"line": 31,
									"character": 9
								},
								{
									"fileName": "utils/lib/index.d.ts",
									"line": 124,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNativeFirebaseModuleAndStatics",
								"id": 960,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Module",
										"id": 886
									},
									{
										"type": "reference",
										"name": "Statics",
										"id": 885
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								46,
								338,
								392,
								434,
								453,
								464,
								513,
								537,
								604,
								615,
								704,
								880,
								52
							]
						}
					],
					"sources": [
						{
							"fileName": "analytics/lib/index.d.ts",
							"line": 244,
							"character": 40
						},
						{
							"fileName": "app/lib/index.d.ts",
							"line": 30,
							"character": 40
						},
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 550,
							"character": 40
						},
						{
							"fileName": "config/lib/index.d.ts",
							"line": 380,
							"character": 40
						},
						{
							"fileName": "crashlytics/lib/index.d.ts",
							"line": 263,
							"character": 40
						},
						{
							"fileName": "fiam/lib/index.d.ts",
							"line": 166,
							"character": 40
						},
						{
							"fileName": "firestore/lib/index.d.ts",
							"line": 121,
							"character": 40
						},
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 374,
							"character": 40
						},
						{
							"fileName": "iid/lib/index.d.ts",
							"line": 167,
							"character": 40
						},
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 439,
							"character": 40
						},
						{
							"fileName": "mlkit/lib/index.d.ts",
							"line": 113,
							"character": 40
						},
						{
							"fileName": "perf/lib/index.d.ts",
							"line": 473,
							"character": 40
						},
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 950,
							"character": 40
						},
						{
							"fileName": "utils/lib/index.d.ts",
							"line": 118,
							"character": 40
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						47,
						45
					]
				}
			],
			"sources": [
				{
					"fileName": "analytics/lib/index.d.ts",
					"line": 243,
					"character": 49
				},
				{
					"fileName": "app/lib/index.d.ts",
					"line": 29,
					"character": 49
				},
				{
					"fileName": "auth/lib/index.d.ts",
					"line": 549,
					"character": 49
				},
				{
					"fileName": "config/lib/index.d.ts",
					"line": 379,
					"character": 49
				},
				{
					"fileName": "crashlytics/lib/index.d.ts",
					"line": 262,
					"character": 49
				},
				{
					"fileName": "fiam/lib/index.d.ts",
					"line": 165,
					"character": 49
				},
				{
					"fileName": "firestore/lib/index.d.ts",
					"line": 120,
					"character": 49
				},
				{
					"fileName": "functions/lib/index.d.ts",
					"line": 373,
					"character": 49
				},
				{
					"fileName": "iid/lib/index.d.ts",
					"line": 166,
					"character": 49
				},
				{
					"fileName": "invites/lib/index.d.ts",
					"line": 438,
					"character": 49
				},
				{
					"fileName": "mlkit/lib/index.d.ts",
					"line": 112,
					"character": 49
				},
				{
					"fileName": "perf/lib/index.d.ts",
					"line": 472,
					"character": 49
				},
				{
					"fileName": "storage/lib/index.d.ts",
					"line": 949,
					"character": 49
				},
				{
					"fileName": "utils/lib/index.d.ts",
					"line": 117,
					"character": 49
				}
			]
		},
		{
			"id": 334,
			"name": "\"@react-native-firebase/auth\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 337,
					"name": "AuthDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 535,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 247
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 90
							}
						]
					}
				},
				{
					"id": 335,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 524,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 336,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/auth';\nfirebase.auth().X(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 533,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						337,
						335,
						336
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/lib/index.d.ts",
					"line": 521,
					"character": 44
				}
			]
		},
		{
			"id": 388,
			"name": "\"@react-native-firebase/config\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 391,
					"name": "ConfigDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "config/lib/index.d.ts",
							"line": 365,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 358
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 342
							}
						]
					}
				},
				{
					"id": 389,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "config/lib/index.d.ts",
							"line": 354,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 390,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/config';\nfirebase.config().X(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "config/lib/index.d.ts",
							"line": 363,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						391,
						389,
						390
					]
				}
			],
			"sources": [
				{
					"fileName": "config/lib/index.d.ts",
					"line": 351,
					"character": 46
				}
			]
		},
		{
			"id": 430,
			"name": "\"@react-native-firebase/crashlytics\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 433,
					"name": "CrashlyticsDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "crashlytics/lib/index.d.ts",
							"line": 245,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 397
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 396
							}
						]
					}
				},
				{
					"id": 431,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "crashlytics/lib/index.d.ts",
							"line": 234,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 432,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/crashlytics';\nfirebase.crashlytics().X(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "crashlytics/lib/index.d.ts",
							"line": 243,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						433,
						431,
						432
					]
				}
			],
			"sources": [
				{
					"fileName": "crashlytics/lib/index.d.ts",
					"line": 231,
					"character": 51
				}
			]
		},
		{
			"id": 449,
			"name": "\"@react-native-firebase/fiam\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 452,
					"name": "FiamDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "fiam/lib/index.d.ts",
							"line": 151,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 439
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 438
							}
						]
					}
				},
				{
					"id": 450,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "fiam/lib/index.d.ts",
							"line": 140,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 451,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/fiam';\nfirebase.fiam().X(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "fiam/lib/index.d.ts",
							"line": 149,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						452,
						450,
						451
					]
				}
			],
			"sources": [
				{
					"fileName": "fiam/lib/index.d.ts",
					"line": 137,
					"character": 44
				}
			]
		},
		{
			"id": 460,
			"name": "\"@react-native-firebase/firestore\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 461,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "firestore/lib/index.d.ts",
							"line": 92,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 463,
					"name": "FirestoreDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "firestore/lib/index.d.ts",
							"line": 103,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 458
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 457
							}
						]
					}
				},
				{
					"id": 462,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/firestore';\nfirebase.firestore().X(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "firestore/lib/index.d.ts",
							"line": 101,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						461,
						463,
						462
					]
				}
			],
			"sources": [
				{
					"fileName": "firestore/lib/index.d.ts",
					"line": 89,
					"character": 49
				}
			]
		},
		{
			"id": 509,
			"name": "\"@react-native-firebase/functions\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 512,
					"name": "FunctionsDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 356,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStaticsWithApp",
						"id": 966,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 500
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 498
							}
						]
					}
				},
				{
					"id": 510,
					"name": "HttpsErrorCode",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 345,
							"character": 29
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "HttpsErrorCode",
								"id": 480
							}
						]
					}
				},
				{
					"id": 511,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/functions';\nfirebase.functions().httpsCallable(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 354,
							"character": 23
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						512,
						510,
						511
					]
				}
			],
			"sources": [
				{
					"fileName": "functions/lib/index.d.ts",
					"line": 341,
					"character": 49
				}
			]
		},
		{
			"id": 533,
			"name": "\"@react-native-firebase/iid\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 534,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "iid/lib/index.d.ts",
							"line": 141,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 536,
					"name": "IidDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "iid/lib/index.d.ts",
							"line": 152,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStaticsWithApp",
						"id": 966,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 519
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 518
							}
						]
					}
				},
				{
					"id": 535,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/iid';\nfirebase.iid().X(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "iid/lib/index.d.ts",
							"line": 150,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						534,
						536,
						535
					]
				}
			],
			"sources": [
				{
					"fileName": "iid/lib/index.d.ts",
					"line": 135,
					"character": 43
				}
			]
		},
		{
			"id": 600,
			"name": "\"@react-native-firebase/invites\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 601,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 413,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 603,
					"name": "InvitesDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 424,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 582
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 541
							}
						]
					}
				},
				{
					"id": 602,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/invites';\nfirebase.invites().X(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 422,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						601,
						603,
						602
					]
				}
			],
			"sources": [
				{
					"fileName": "invites/lib/index.d.ts",
					"line": 410,
					"character": 47
				}
			]
		},
		{
			"id": 611,
			"name": "\"@react-native-firebase/mlkit\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 612,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "mlkit/lib/index.d.ts",
							"line": 84,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 614,
					"name": "MlkitDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "mlkit/lib/index.d.ts",
							"line": 95,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 609
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 608
							}
						]
					}
				},
				{
					"id": 613,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/mlkit';\nfirebase.mlkit().X(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "mlkit/lib/index.d.ts",
							"line": 93,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						612,
						614,
						613
					]
				}
			],
			"sources": [
				{
					"fileName": "mlkit/lib/index.d.ts",
					"line": 81,
					"character": 45
				}
			]
		},
		{
			"id": 700,
			"name": "\"@react-native-firebase/perf\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 701,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "perf/lib/index.d.ts",
							"line": 447,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 703,
					"name": "PerfDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "perf/lib/index.d.ts",
							"line": 458,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 683
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 682
							}
						]
					}
				},
				{
					"id": 702,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/perf';\nfirebase.perf().X(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "perf/lib/index.d.ts",
							"line": 456,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						701,
						703,
						702
					]
				}
			],
			"sources": [
				{
					"fileName": "perf/lib/index.d.ts",
					"line": 444,
					"character": 44
				}
			]
		},
		{
			"id": 876,
			"name": "\"@react-native-firebase/storage\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 877,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 937,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 879,
					"name": "StorageDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 941,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 856
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 731
							}
						]
					}
				},
				{
					"id": 878,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 939,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						877,
						879,
						878
					]
				}
			],
			"sources": [
				{
					"fileName": "storage/lib/index.d.ts",
					"line": 934,
					"character": 47
				}
			]
		},
		{
			"id": 889,
			"name": "\"@react-native-firebase/utils\"",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 890,
					"name": "FirebaseNamespaceExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "utils/lib/index.d.ts",
							"line": 89,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "__type"
							},
							{
								"type": "reference",
								"name": "ReactNativeFirebaseNamespace"
							}
						]
					}
				},
				{
					"id": 892,
					"name": "UtilsDefaultExport",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "utils/lib/index.d.ts",
							"line": 100,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseModuleAndStatics",
						"id": 960,
						"typeArguments": [
							{
								"type": "reference",
								"name": "Module",
								"id": 886
							},
							{
								"type": "reference",
								"name": "Statics",
								"id": 885
							}
						]
					}
				},
				{
					"id": 891,
					"name": "firebase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { firebase } from '@react-native-firebase/utils';\nfirebase.utils().X(...);\n```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/lib/index.d.ts",
							"line": 98,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNativeFirebaseNamespace"
					},
					"defaultValue": " FirebaseNamespaceExport"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						890,
						892,
						891
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/lib/index.d.ts",
					"line": 86,
					"character": 45
				}
			]
		},
		{
			"id": 1,
			"name": "Analytics",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase Analytics package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `analytics` package:\n\n```js\nimport { firebase } from '@react-native-firebase/analytics';\n\n// firebase.analytics().X\n```\n\n#### Example 2\n\nUsing the default export from the `analytics` package:\n\n```js\nimport analytics from '@react-native-firebase/analytics';\n\n// analytics().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/analytics';\n\n// firebase.analytics().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "analytics\n"
					}
				]
			},
			"children": [
				{
					"id": 3,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase Analytics service interface.",
						"text": "> This module is available for the default app only.\n\n#### Example\n\nGet the Analytics service for the default app:\n\n```js\nconst defaultAppAnalytics = firebase.analytics();\n```\n"
					},
					"children": [
						{
							"id": 39,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 4,
							"name": "logEvent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5,
									"name": "logEvent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Log a custom event with optional params.",
										"text": "#### Example\n\n```js\nawait firebase.analytics().logEvent('product_view', {\n  id: '1234',\n});\n```\n",
										"tags": [
											{
												"tag": "note",
												"text": "100 characters is the maximum length for param key names.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 6,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Event name must not conflict with any Reserved Events."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 7,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Parameters to be sent and displayed with the event.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 8,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 9,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 10,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "analytics/lib/index.d.ts",
															"line": 93,
															"character": 34
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 93,
									"character": 12
								}
							]
						},
						{
							"id": 37,
							"name": "resetAnalyticsData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 38,
									"name": "resetAnalyticsData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clears all analytics data for this instance from the device and resets the app instance ID.",
										"text": "#### Example\n\n```js\nawait firebase.analytics().resetAnalyticsData();\n```\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 215,
									"character": 22
								}
							]
						},
						{
							"id": 11,
							"name": "setAnalyticsCollectionEnabled",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 12,
									"name": "setAnalyticsCollectionEnabled",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If true, allows the device to collect analytical data and send it to Firebase.\nUseful for GDPR.",
										"text": "#### Example\n\n```js\n// Disable collection\nawait firebase.analytics().setAnalyticsCollectionEnabled(false);\n```\n",
										"tags": [
											{
												"tag": "note",
												"text": "Analytics collection is enabled by default.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 13,
											"name": "enabled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A boolean value representing whether Analytics collection is enabled or disabled.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 110,
									"character": 33
								}
							]
						},
						{
							"id": 14,
							"name": "setCurrentScreen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 15,
									"name": "setCurrentScreen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the current screen name.",
										"text": "#### Example\n\n```js\nawait firebase.analytics().setCurrentScreen('ProductScreen', 'ProductScreen');\n```\n",
										"tags": [
											{
												"tag": "note",
												"text": "Whilst screenClassOverride is optional, it is recommended it is\nalways sent as your current class name. For example on Android it will always\nshow as 'MainActivity' if you do not specify it.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 16,
											"name": "screenName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A screen name, e.g. Product."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17,
											"name": "screenClassOverride",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "On Android, React Native runs in a single activity called\n'MainActivity'. Setting this parameter overrides the default name shown on logs.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 129,
									"character": 20
								}
							]
						},
						{
							"id": 18,
							"name": "setMinimumSessionDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 19,
									"name": "setMinimumSessionDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the minimum engagement time required before starting a session.",
										"text": "#### Example\n\n```js\n// 20 seconds\nawait firebase.analytics().setMinimumSessionDuration(20000);\n```\n"
									},
									"parameters": [
										{
											"id": 20,
											"name": "milliseconds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The default value is 10000 (10 seconds).\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 143,
									"character": 29
								}
							]
						},
						{
							"id": 21,
							"name": "setSessionTimeoutDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 22,
									"name": "setSessionTimeoutDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the duration of inactivity that terminates the current session.",
										"text": "#### Example\n\n```js\n// 20 minutes\nawait firebase.analytics().setMinimumSessionDuration(900000);\n```\n"
									},
									"parameters": [
										{
											"id": 23,
											"name": "milliseconds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The default value is 1800000 (30 minutes).\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 157,
									"character": 29
								}
							]
						},
						{
							"id": 24,
							"name": "setUserId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 25,
									"name": "setUserId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gives a user a unique identification.",
										"text": "#### Example\n\n```js\n// Set User\nawait firebase.analytics().setUserId('123456789');\n// Remove User\nawait firebase.analytics().setUserId(null);\n```\n"
									},
									"parameters": [
										{
											"id": 26,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set to null to remove a previously assigned id from analytics events\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 173,
									"character": 13
								}
							]
						},
						{
							"id": 31,
							"name": "setUserProperties",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 32,
									"name": "setUserProperties",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets multiple key/value pair of data on the current user.",
										"text": "#### Example\n\n```js\nawait firebase.analytics().setUserProperties({\n  account_type: 'gold',\n  account_name: 'Gold Badge',\n});\n```\n",
										"tags": [
											{
												"tag": "react-native-firebase",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 33,
											"name": "properties",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set a property value to null to remove it.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 34,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 35,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 36,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "analytics/lib/index.d.ts",
															"line": 204,
															"character": 33
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 204,
									"character": 21
								}
							]
						},
						{
							"id": 27,
							"name": "setUserProperty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 28,
									"name": "setUserProperty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a key/value pair of data on the current user.",
										"text": "#### Example\n\n```js\nawait firebase.analytics().setUserProperty('account_type', 'gold');\n```\n"
									},
									"parameters": [
										{
											"id": 29,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A user property identifier."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set to null to remove a previously assigned id from analytics events.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "analytics/lib/index.d.ts",
									"line": 187,
									"character": 19
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								39
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4,
								37,
								11,
								14,
								18,
								21,
								24,
								31,
								27
							]
						}
					],
					"sources": [
						{
							"fileName": "analytics/lib/index.d.ts",
							"line": 76,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 2,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "analytics/lib/index.d.ts",
							"line": 61,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "analytics/lib/index.d.ts",
					"line": 60,
					"character": 26
				}
			]
		},
		{
			"id": 941,
			"name": "App",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "firebase",
						"text": "app\n"
					}
				]
			},
			"children": [
				{
					"id": 942,
					"name": "FirebaseApp",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 943,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The name (identifier) for this App. '[DEFAULT]' is the default App."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 191,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 944,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The (read-only) configuration options from the app initialization."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 196,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseOptions",
								"id": 927
							}
						},
						{
							"id": 945,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 946,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Make this app unusable and free up resources."
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 201,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								943,
								944
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								945
							]
						}
					],
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 187,
							"character": 30
						}
					]
				},
				{
					"id": 947,
					"name": "ReactNativeFirebaseNamespace",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 959,
							"name": "SDK_VERSION",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The current React Native Firebase version."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 242,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 958,
							"name": "apps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A (read-only) array of all the initialized Apps."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 237,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "FirebaseApp",
									"id": 942
								}
							}
						},
						{
							"id": 955,
							"name": "app",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 956,
									"name": "app",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieve an instance of a FirebaseApp.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst app = firebase.app('foo');\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 957,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The optional name of the app to return ('[DEFAULT]' if omitted)\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FirebaseApp",
										"id": 942
									}
								}
							],
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 232,
									"character": 7
								}
							]
						},
						{
							"id": 948,
							"name": "initializeApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 949,
									"name": "initializeApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create (and initialize) a FirebaseApp."
									},
									"parameters": [
										{
											"id": 950,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Options to configure the services used in the App."
											},
											"type": {
												"type": "reference",
												"name": "FirebaseOptions",
												"id": 927
											}
										},
										{
											"id": 951,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The optional config for your firebase app\n"
											},
											"type": {
												"type": "reference",
												"name": "FirebaseAppConfig",
												"id": 903
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FirebaseApp",
										"id": 942
									}
								},
								{
									"id": 952,
									"name": "initializeApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create (and initialize) a FirebaseApp."
									},
									"parameters": [
										{
											"id": 953,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Options to configure the services used in the App."
											},
											"type": {
												"type": "reference",
												"name": "FirebaseOptions",
												"id": 927
											}
										},
										{
											"id": 954,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The optional name of the app to initialize ('[DEFAULT]' if\nomitted)\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FirebaseApp",
										"id": 942
									}
								}
							],
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 211,
									"character": 17
								},
								{
									"fileName": "app-types/index.d.ts",
									"line": 220,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								959,
								958
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								955,
								948
							]
						}
					],
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 204,
							"character": 47
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						942,
						947
					]
				}
			],
			"sources": [
				{
					"fileName": "app-types/index.d.ts",
					"line": 186,
					"character": 20
				}
			]
		},
		{
			"id": 59,
			"name": "Auth",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase Authentication package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `auth` package:\n\n```js\nimport { firebase } from '@react-native-firebase/auth';\n\n// firebase.auth().X\n```\n\n#### Example 2\n\nUsing the default export from the `auth` package:\n\n```js\nimport auth from '@react-native-firebase/auth';\n\n// auth().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/auth';\n\n// firebase.auth().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "auth\n"
					}
				]
			},
			"children": [
				{
					"id": 247,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase Authentication service is available for the default app or a given app.",
						"text": "#### Example 1\n\nGet the auth instance for the **default app**:\n\n```js\nconst authForDefaultApp = firebase.auth();\n```\n\n#### Example 2\n\nGet the auth instance for a **secondary app**:\n\n```js\nconst otherApp = firebase.app('otherApp');\nconst authForOtherApp = firebase.auth(otherApp);\n```\n\n"
					},
					"children": [
						{
							"id": 329,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 254,
							"name": "currentUser",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the currently signed-in user (or null if no user signed in). See the User interface documentation for detailed usage."
							},
							"getSignature": [
								{
									"id": 255,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the currently signed-in user (or null if no user signed in). See the User interface documentation for detailed usage."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "User",
												"id": 200
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 377,
									"character": 19
								}
							]
						},
						{
							"id": 252,
							"name": "settings",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 253,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AuthSettings",
										"id": 194
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 372,
									"character": 16
								}
							]
						},
						{
							"id": 317,
							"name": "applyActionCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 318,
									"name": "applyActionCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Applies a verification code sent to the user by email or other out-of-band mechanism."
									},
									"parameters": [
										{
											"id": 319,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 497,
									"character": 19
								}
							]
						},
						{
							"id": 320,
							"name": "checkActionCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 321,
									"name": "checkActionCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks a verification code sent to the user by email or other out-of-band mechanism."
									},
									"parameters": [
										{
											"id": 322,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ActionCodeInfo",
												"id": 142
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 504,
									"character": 19
								}
							]
						},
						{
							"id": 313,
							"name": "confirmPasswordReset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 314,
									"name": "confirmPasswordReset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Completes the password reset process with the confirmation code and new password."
									},
									"parameters": [
										{
											"id": 315,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 316,
											"name": "newPassword",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 490,
									"character": 24
								}
							]
						},
						{
							"id": 284,
							"name": "createUserWithEmailAndPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 285,
									"name": "createUserWithEmailAndPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 286,
											"name": "email",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 287,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserCredential",
												"id": 104
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 434,
									"character": 34
								}
							]
						},
						{
							"id": 323,
							"name": "fetchSignInMethodsForEmail",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 324,
									"name": "fetchSignInMethodsForEmail",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of authentication methods that can be used to sign in a given user (identified by its main email address)."
									},
									"parameters": [
										{
											"id": 325,
											"name": "email",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 511,
									"character": 30
								}
							]
						},
						{
							"id": 306,
							"name": "isSignInWithEmailLink",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 307,
									"name": "isSignInWithEmailLink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 308,
											"name": "emailLink",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 475,
									"character": 25
								}
							]
						},
						{
							"id": 248,
							"name": "languageCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 249,
									"name": "languageCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 250,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 251,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 368,
									"character": 16
								},
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 370,
									"character": 20
								}
							]
						},
						{
							"id": 256,
							"name": "onAuthStateChanged",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 257,
									"name": "onAuthStateChanged",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Listen for changes in the users auth state (logging in and out).\nThis method returns a unsubscribe function to stop listening to events.\nAlways ensure you unsubscribe from the listener when no longer needed to prevent updates to components no longer in use."
									},
									"parameters": [
										{
											"id": 258,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AuthListenerCallback",
												"id": 330
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 259,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 260,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "auth/lib/index.d.ts",
													"line": 384,
													"character": 55
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 384,
									"character": 22
								}
							]
						},
						{
							"id": 261,
							"name": "onIdTokenChanged",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 262,
									"name": "onIdTokenChanged",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Listen for changes in id token.\nThis method returns a unsubscribe function to stop listening to events.\nAlways ensure you unsubscribe from the listener when no longer needed to prevent updates to components no longer in use."
									},
									"parameters": [
										{
											"id": 263,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AuthListenerCallback",
												"id": 330
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 264,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 265,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "auth/lib/index.d.ts",
													"line": 391,
													"character": 53
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 391,
									"character": 20
								}
							]
						},
						{
							"id": 266,
							"name": "onUserChanged",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 267,
									"name": "onUserChanged",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Listen for changes in the user.\nThis method returns a unsubscribe function to stop listening to events.\nAlways ensure you unsubscribe from the listener when no longer needed to prevent updates to components no longer in use."
									},
									"parameters": [
										{
											"id": 268,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AuthListenerCallback",
												"id": 330
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 269,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 270,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "auth/lib/index.d.ts",
													"line": 398,
													"character": 50
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 398,
									"character": 17
								}
							]
						},
						{
							"id": 298,
							"name": "sendPasswordResetEmail",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 299,
									"name": "sendPasswordResetEmail",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sends a password reset email to the given email address.\nUnlike the web SDK, the email will contain a password reset link rather than a code."
									},
									"parameters": [
										{
											"id": 300,
											"name": "email",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 301,
											"name": "actionCodeSettings",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "ActionCodeSettings",
												"id": 147
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 462,
									"character": 26
								}
							]
						},
						{
							"id": 302,
							"name": "sendSignInLinkToEmail",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 303,
									"name": "sendSignInLinkToEmail",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 304,
											"name": "email",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 305,
											"name": "actionCodeSettings",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "ActionCodeSettings",
												"id": 147
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 469,
									"character": 25
								}
							]
						},
						{
							"id": 273,
							"name": "signInAnonymously",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 274,
									"name": "signInAnonymously",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sign in a user anonymously. If the user has already signed in, that user will be returned."
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserCredential",
												"id": 104
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 405,
									"character": 21
								}
							]
						},
						{
							"id": 295,
							"name": "signInWithCredential",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 296,
									"name": "signInWithCredential",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 297,
											"name": "credential",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserCredential",
												"id": 104
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 453,
									"character": 24
								}
							]
						},
						{
							"id": 292,
							"name": "signInWithCustomToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 293,
									"name": "signInWithCustomToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 294,
											"name": "customToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserCredential",
												"id": 104
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 447,
									"character": 25
								}
							]
						},
						{
							"id": 288,
							"name": "signInWithEmailAndPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 289,
									"name": "signInWithEmailAndPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 290,
											"name": "email",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 291,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserCredential",
												"id": 104
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 441,
									"character": 30
								}
							]
						},
						{
							"id": 309,
							"name": "signInWithEmailLink",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 310,
									"name": "signInWithEmailLink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 311,
											"name": "email",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 312,
											"name": "emailLink",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserCredential",
												"id": 104
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 482,
									"character": 23
								}
							]
						},
						{
							"id": 275,
							"name": "signInWithPhoneNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 276,
									"name": "signInWithPhoneNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Signs in the user using their phone number."
									},
									"parameters": [
										{
											"id": 277,
											"name": "phoneNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 278,
											"name": "forceResend",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ConfirmationResult",
												"id": 130
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 412,
									"character": 25
								}
							]
						},
						{
							"id": 271,
							"name": "signOut",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 272,
									"name": "signOut",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 400,
									"character": 11
								}
							]
						},
						{
							"id": 326,
							"name": "verifyPasswordResetCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 327,
									"name": "verifyPasswordResetCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 328,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 517,
									"character": 27
								}
							]
						},
						{
							"id": 279,
							"name": "verifyPhoneNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 280,
									"name": "verifyPhoneNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a PhoneAuthListener to listen to phone verification events,\non the final completion event a PhoneAuthCredential can be generated for\nauthentication purposes."
									},
									"parameters": [
										{
											"id": 281,
											"name": "phoneNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 282,
											"name": "autoVerifyTimeoutOrForceResend",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 283,
											"name": "forceResend",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PhoneAuthListener",
										"id": 162
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 423,
									"character": 21
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								329
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								254,
								252
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								317,
								320,
								313,
								284,
								323,
								306,
								248,
								256,
								261,
								266,
								298,
								302,
								273,
								295,
								292,
								288,
								309,
								275,
								271,
								326,
								279
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 367,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 142,
					"name": "ActionCodeInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 143,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 158,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ActionCodeInfoData",
								"id": 139
							}
						},
						{
							"id": 144,
							"name": "operation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 159,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "PASSWORD_RESET"
									},
									{
										"type": "stringLiteral",
										"value": "VERIFY_EMAIL"
									},
									{
										"type": "stringLiteral",
										"value": "RECOVER_EMAIL"
									},
									{
										"type": "stringLiteral",
										"value": "EMAIL_SIGNIN"
									},
									{
										"type": "stringLiteral",
										"value": "ERROR"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								143,
								144
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 157,
							"character": 33
						}
					]
				},
				{
					"id": 139,
					"name": "ActionCodeInfoData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 140,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 153,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 141,
							"name": "fromEmail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 154,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								140,
								141
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 152,
							"character": 37
						}
					]
				},
				{
					"id": 147,
					"name": "ActionCodeSettings",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 148,
							"name": "android",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 167,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "ActionCodeSettingsAndroid",
								"id": 135
							}
						},
						{
							"id": 149,
							"name": "handleCodeInApp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 168,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 150,
							"name": "iOS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 169,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "ActionCodeSettingsIos",
								"id": 145
							}
						},
						{
							"id": 151,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 170,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								148,
								149,
								150,
								151
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 166,
							"character": 37
						}
					]
				},
				{
					"id": 135,
					"name": "ActionCodeSettingsAndroid",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 136,
							"name": "installApp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 147,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 137,
							"name": "minimumVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 148,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 138,
							"name": "packageName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 149,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								136,
								137,
								138
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 146,
							"character": 44
						}
					]
				},
				{
					"id": 145,
					"name": "ActionCodeSettingsIos",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 146,
							"name": "bundleId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 163,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								146
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 162,
							"character": 40
						}
					]
				},
				{
					"id": 99,
					"name": "AdditionalUserInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 100,
							"name": "isNewUser",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 100,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 101,
							"name": "profile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 101,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 102,
							"name": "providerId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 102,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 103,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 103,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								100,
								101,
								102,
								103
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 99,
							"character": 37
						}
					]
				},
				{
					"id": 64,
					"name": "AuthProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 65,
							"name": "PROVIDER_ID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 69,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 66,
							"name": "credential",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 67,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 68,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 69,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												},
												{
													"id": 70,
													"name": "secret",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "AuthProviderCredential",
												"id": 60
											}
										}
									],
									"sources": [
										{
											"fileName": "auth/lib/index.d.ts",
											"line": 70,
											"character": 15
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								65,
								66
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 68,
							"character": 31
						}
					]
				},
				{
					"id": 60,
					"name": "AuthProviderCredential",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 61,
							"name": "providerId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 63,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 63,
							"name": "secret",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 65,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 62,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 64,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								61,
								63,
								62
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 62,
							"character": 41
						}
					]
				},
				{
					"id": 194,
					"name": "AuthSettings",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 195,
							"name": "appVerificationDisabledForTesting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Flag to determine whether app verification should be disabled for testing or not.",
								"tags": [
									{
										"tag": "platform",
										"text": "iOS"
									},
									{
										"tag": "param",
										"text": "\n",
										"param": "disabled"
									}
								]
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 212,
									"character": 37
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 196,
							"name": "setAutoRetrievedSmsCodeForPhoneNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 197,
									"name": "setAutoRetrievedSmsCodeForPhoneNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The phone number and SMS code here must have been configured in the\nFirebase Console (Authentication > Sign In Method > Phone).",
										"text": "Calling this method a second time will overwrite the previously passed parameters.\nOnly one number can be configured at a given time.\n",
										"returns": "\n",
										"tags": [
											{
												"tag": "platform",
												"text": "Android"
											}
										]
									},
									"parameters": [
										{
											"id": 198,
											"name": "phoneNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 199,
											"name": "smsCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 226,
									"character": 41
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								195
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								196
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 205,
							"character": 31
						}
					]
				},
				{
					"id": 130,
					"name": "ConfirmationResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 134,
							"name": "verificationId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 143,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 131,
							"name": "confirm",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 132,
									"name": "confirm",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 133,
											"name": "verificationCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "User",
														"id": 200
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 142,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								134
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								131
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 141,
							"character": 37
						}
					]
				},
				{
					"id": 71,
					"name": "EmailAuthProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 73,
							"name": "EMAIL_LINK_SIGN_IN_METHOD",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 75,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 74,
							"name": "EMAIL_PASSWORD_SIGN_IN_METHOD",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 76,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 72,
							"name": "PROVIDER_ID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 74,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 75,
							"name": "credential",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 77,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 76,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 77,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 78,
													"name": "email",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 79,
													"name": "password",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "AuthProviderCredential",
												"id": 60
											}
										}
									],
									"sources": [
										{
											"fileName": "auth/lib/index.d.ts",
											"line": 77,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 80,
							"name": "credentialWithLink",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 78,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 81,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 82,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 83,
													"name": "email",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 84,
													"name": "emailLink",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "AuthProviderCredential",
												"id": 60
											}
										}
									],
									"sources": [
										{
											"fileName": "auth/lib/index.d.ts",
											"line": 78,
											"character": 23
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								73,
								74,
								72,
								75,
								80
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 73,
							"character": 36
						}
					]
				},
				{
					"id": 117,
					"name": "IdTokenResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 119,
							"name": "authTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 127,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 123,
							"name": "claims",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 131,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 124,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 125,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 126,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "auth/lib/index.d.ts",
											"line": 131,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 121,
							"name": "expirationTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 129,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 120,
							"name": "issuedAtTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 128,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 122,
							"name": "signInProvider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 130,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 118,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 126,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								119,
								123,
								121,
								120,
								122,
								118
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 125,
							"character": 32
						}
					]
				},
				{
					"id": 157,
					"name": "PhoneAuthError",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 158,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 183,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 160,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 185,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 161,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 186,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 159,
							"name": "verificationId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 184,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								158,
								160,
								161,
								159
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 182,
							"character": 33
						}
					]
				},
				{
					"id": 162,
					"name": "PhoneAuthListener",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 188,
							"name": "catch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 189,
									"name": "catch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190,
											"name": "onRejected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 191,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 192,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 193,
																	"name": "a",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "NativeFirebaseError"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "auth/lib/index.d.ts",
															"line": 202,
															"character": 21
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 202,
									"character": 9
								}
							]
						},
						{
							"id": 163,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 164,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 165,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 166,
											"name": "observer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 167,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 168,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 169,
																	"name": "snapshot",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "PhoneAuthSnapshot",
																		"id": 152
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "auth/lib/index.d.ts",
															"line": 192,
															"character": 15
														}
													]
												}
											}
										},
										{
											"id": 170,
											"name": "errorCb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 171,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 172,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 173,
																			"name": "error",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "PhoneAuthError",
																				"id": 157
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 174,
											"name": "successCb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 175,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 176,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 177,
																			"name": "snapshot",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "PhoneAuthSnapshot",
																				"id": 152
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PhoneAuthListener",
										"id": 162
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 190,
									"character": 6
								}
							]
						},
						{
							"id": 178,
							"name": "then",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 179,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 180,
											"name": "onFulfilled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 181,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 182,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 183,
																			"name": "a",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "PhoneAuthSnapshot",
																				"id": 152
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "auth/lib/index.d.ts",
																	"line": 198,
																	"character": 19
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 184,
											"name": "onRejected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 185,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 186,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 187,
																			"name": "a",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "NativeFirebaseError"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "auth/lib/index.d.ts",
																	"line": 199,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 197,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								188,
								163,
								178
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 189,
							"character": 36
						}
					]
				},
				{
					"id": 152,
					"name": "PhoneAuthSnapshot",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 155,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 178,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 156,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 179,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "NativeFirebaseError"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 153,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 176,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "sent"
									},
									{
										"type": "stringLiteral",
										"value": "timeout"
									},
									{
										"type": "stringLiteral",
										"value": "verified"
									},
									{
										"type": "stringLiteral",
										"value": "error"
									}
								]
							}
						},
						{
							"id": 154,
							"name": "verificationId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 177,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								155,
								156,
								153,
								154
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 175,
							"character": 36
						}
					]
				},
				{
					"id": 85,
					"name": "PhoneAuthState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 88,
							"name": "AUTO_VERIFIED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 84,
									"character": 17
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "verified"
							}
						},
						{
							"id": 87,
							"name": "AUTO_VERIFY_TIMEOUT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 83,
									"character": 23
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "timeout"
							}
						},
						{
							"id": 86,
							"name": "CODE_SENT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 82,
									"character": 13
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "sent"
							}
						},
						{
							"id": 89,
							"name": "ERROR",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 85,
									"character": 9
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "error"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								88,
								87,
								86,
								89
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 81,
							"character": 33
						}
					]
				},
				{
					"id": 90,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 91,
							"name": "EmailAuthProvider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 89,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "EmailAuthProvider",
								"id": 71
							}
						},
						{
							"id": 96,
							"name": "FacebookAuthProvider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 94,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "AuthProvider",
								"id": 64
							}
						},
						{
							"id": 94,
							"name": "GithubAuthProvider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 92,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "AuthProvider",
								"id": 64
							}
						},
						{
							"id": 93,
							"name": "GoogleAuthProvider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 91,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "AuthProvider",
								"id": 64
							}
						},
						{
							"id": 97,
							"name": "OAuthProvider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 95,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "AuthProvider",
								"id": 64
							}
						},
						{
							"id": 92,
							"name": "PhoneAuthProvider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 90,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "AuthProvider",
								"id": 64
							}
						},
						{
							"id": 98,
							"name": "PhoneAuthState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 96,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "PhoneAuthState",
								"id": 85
							}
						},
						{
							"id": 95,
							"name": "TwitterAuthProvider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 93,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "AuthProvider",
								"id": 64
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								91,
								96,
								94,
								93,
								97,
								92,
								98,
								95
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 88,
							"character": 26
						}
					]
				},
				{
					"id": 127,
					"name": "UpdateProfile",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 128,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 137,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 129,
							"name": "photoURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 138,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								128,
								129
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 136,
							"character": 32
						}
					]
				},
				{
					"id": 200,
					"name": "User",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 201,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The user's display name (if available)."
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 233,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 202,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "- The user's email address (if available)."
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 237,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 203,
							"name": "emailVerified",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "- True if the user's email address has been verified."
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 241,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 204,
							"name": "isAnonymous",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 245,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 205,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 247,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "UserMetadata",
								"id": 107
							}
						},
						{
							"id": 206,
							"name": "phoneNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 249,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 207,
							"name": "photoURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "- The URL of the user's profile picture (if available)."
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 254,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 208,
							"name": "providerData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "- Additional provider-specific information about the user."
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 259,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "UserInfo",
										"id": 110
									}
								]
							}
						},
						{
							"id": 209,
							"name": "providerId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " - The authentication provider ID for the current user.\n For example, 'facebook.com', or 'google.com'."
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 265,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 210,
							"name": "uid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " - The user's unique ID."
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 270,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 211,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 212,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the current user."
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 275,
									"character": 10
								}
							]
						},
						{
							"id": 213,
							"name": "getIdToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 214,
									"name": "getIdToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the users authentication token."
									},
									"parameters": [
										{
											"id": 215,
											"name": "forceRefresh",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 282,
									"character": 14
								}
							]
						},
						{
							"id": 216,
							"name": "getIdTokenResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 217,
									"name": "getIdTokenResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a firebase.auth.IdTokenResult object which contains the ID token JWT string and\nother helper properties for getting different data associated with the token as well as\nall the decoded payload claims."
									},
									"parameters": [
										{
											"id": 218,
											"name": "forceRefresh",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "boolean Force refresh regardless of token expiration.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IdTokenResult",
												"id": 117
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 291,
									"character": 20
								}
							]
						},
						{
							"id": 219,
							"name": "linkWithCredential",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 220,
									"name": "linkWithCredential",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Link the user with a 3rd party credential provider."
									},
									"parameters": [
										{
											"id": 221,
											"name": "credential",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AuthProviderCredential",
												"id": 60
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserCredential",
												"id": 104
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 296,
									"character": 22
								}
							]
						},
						{
							"id": 222,
							"name": "reauthenticateWithCredential",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 223,
									"name": "reauthenticateWithCredential",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Re-authenticate a user with a third-party authentication provider"
									},
									"parameters": [
										{
											"id": 224,
											"name": "credential",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AuthProviderCredential",
												"id": 60
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserCredential",
												"id": 104
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 301,
									"character": 32
								}
							]
						},
						{
							"id": 225,
							"name": "reload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 226,
									"name": "reload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Refreshes the current user."
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 306,
									"character": 10
								}
							]
						},
						{
							"id": 227,
							"name": "sendEmailVerification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 228,
									"name": "sendEmailVerification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sends a verification email to a user.\nThis will Promise reject is the user is anonymous."
									},
									"parameters": [
										{
											"id": 229,
											"name": "actionCodeSettings",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "ActionCodeSettings",
												"id": 147
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 312,
									"character": 25
								}
							]
						},
						{
							"id": 230,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 231,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 314,
									"character": 10
								}
							]
						},
						{
							"id": 232,
							"name": "unlink",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 233,
									"name": "unlink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 234,
											"name": "providerId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "User",
												"id": 200
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 316,
									"character": 10
								}
							]
						},
						{
							"id": 235,
							"name": "updateEmail",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 236,
									"name": "updateEmail",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the user's email address.\nSee Firebase docs for more information on security & email validation.\nThis will Promise reject is the user is anonymous."
									},
									"parameters": [
										{
											"id": 237,
											"name": "email",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 323,
									"character": 15
								}
							]
						},
						{
							"id": 238,
							"name": "updatePassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 239,
									"name": "updatePassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Important: this is a security sensitive operation that requires the user to have recently signed in.\nIf this requirement isn't met, ask the user to authenticate again and then call firebase.User#reauthenticate.\nThis will Promise reject is the user is anonymous."
									},
									"parameters": [
										{
											"id": 240,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 330,
									"character": 18
								}
							]
						},
						{
							"id": 241,
							"name": "updatePhoneNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 242,
									"name": "updatePhoneNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the user's phone number.\nSee Firebase docs for more information on security & email validation.\nThis will Promise reject is the user is anonymous."
									},
									"parameters": [
										{
											"id": 243,
											"name": "credential",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AuthProviderCredential",
												"id": 60
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 337,
									"character": 21
								}
							]
						},
						{
							"id": 244,
							"name": "updateProfile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 245,
									"name": "updateProfile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a user's profile data.\nProfile data should be an object of fields to update:"
									},
									"parameters": [
										{
											"id": 246,
											"name": "updates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "UpdateProfile",
												"id": 127
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 343,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								201,
								202,
								203,
								204,
								205,
								206,
								207,
								208,
								209,
								210
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								211,
								213,
								216,
								219,
								222,
								225,
								227,
								230,
								232,
								235,
								238,
								241,
								244
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 229,
							"character": 23
						}
					]
				},
				{
					"id": 104,
					"name": "UserCredential",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 105,
							"name": "additionalUserInfo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 107,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "AdditionalUserInfo",
								"id": 99
							}
						},
						{
							"id": 106,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 108,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "User",
								"id": 200
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								105,
								106
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 106,
							"character": 33
						}
					]
				},
				{
					"id": 110,
					"name": "UserInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 111,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 117,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 112,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 118,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 113,
							"name": "phoneNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 119,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 114,
							"name": "photoURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 120,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 115,
							"name": "providerId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 121,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 116,
							"name": "uid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 122,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								111,
								112,
								113,
								114,
								115,
								116
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 116,
							"character": 27
						}
					]
				},
				{
					"id": 107,
					"name": "UserMetadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 108,
							"name": "creationTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 112,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 109,
							"name": "lastSignInTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 113,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								108,
								109
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 111,
							"character": 31
						}
					]
				},
				{
					"id": 330,
					"name": "AuthListenerCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "auth/lib/index.d.ts",
							"line": 173,
							"character": 34
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 331,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 332,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 333,
											"name": "user",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "User",
														"id": 200
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/lib/index.d.ts",
									"line": 173,
									"character": 36
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						247
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						142,
						139,
						147,
						135,
						145,
						99,
						64,
						60,
						194,
						130,
						71,
						117,
						157,
						162,
						152,
						85,
						90,
						127,
						200,
						104,
						110,
						107
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						330
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/lib/index.d.ts",
					"line": 61,
					"character": 21
				}
			]
		},
		{
			"id": 341,
			"name": "Config",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase Remote Config package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `config` package:\n\n```js\nimport { firebase } from '@react-native-firebase/config';\n\n// firebase.config().X\n```\n\n#### Example 2\n\nUsing the default export from the `config` package:\n\n```js\nimport config from '@react-native-firebase/config';\n\n// config().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/config';\n\n// firebase.config().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "config\n"
					}
				]
			},
			"children": [
				{
					"id": 358,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase Remote Config service interface.",
						"text": "> This module is available for the default app only.\n\n#### Example\n\nGet the Remote Config service for the default app:\n\n```js\nconst defaultAppRemoteConfig = firebase.config();\n```\n"
					},
					"children": [
						{
							"id": 387,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 359,
							"name": "activateFetched",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 360,
									"name": "activateFetched",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Moves fetched data to the apps active config.\nResolves with a boolean value of whether the fetched config was moved successfully.",
										"text": "#### Example\n\n```js\n// Fetch values\nawait firebase.config().fetch();\nconst activated = await firebase.config().activateFetched();\n\nif (activated) {\n console.log('Fetched values successfully activated.');\n} else {\n  console.log('Fetched values failed to activate.');\n}\n```\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 210,
									"character": 19
								}
							]
						},
						{
							"id": 361,
							"name": "fetch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 362,
									"name": "fetch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the remote config data from Firebase, as defined in the dashboard. If duration is defined (seconds), data will be locally cached for this duration.",
										"text": "#### Example\n\n```js\n// Fetch and cache for 5 minutes\nawait firebase.config().fetch(300);\n```\n"
									},
									"parameters": [
										{
											"id": 363,
											"name": "cacheExpirationSeconds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Duration in seconds to cache the data for. To skip cache, use a duration of 0.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 224,
									"character": 9
								}
							]
						},
						{
							"id": 364,
							"name": "fetchAndActivate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 365,
									"name": "fetchAndActivate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the remote config data from Firebase, as defined in the dashboard. If duration is defined (seconds), data will be locally cached for this duration.",
										"text": "Once fetching is complete this method immediately calls activateFetched and returns a boolean value of the activation status.\n\n#### Example\n\n```js\n// Fetch, cache for 5 minutes and activate\nconst activated = await firebase.config().fetchAndActivate(300);\n\nif (activated) {\n console.log('Fetched values successfully activated.');\n} else {\n  console.log('Fetched values failed to activate.');\n}\n```\n"
									},
									"parameters": [
										{
											"id": 366,
											"name": "cacheExpirationSeconds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Duration in seconds to cache the data for. To skip cache use a duration of 0.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 246,
									"character": 20
								}
							]
						},
						{
							"id": 367,
							"name": "getConfigSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 368,
									"name": "getConfigSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieve the configuration settings and status for Remote Config.",
										"text": "### Example\n\n```js\nconst settings = await firebase.config().getConfigSettings();\nconsole.log('Developer mode enabled: ', settings.isDeveloperModeEnabled);\n```\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ConfigSettingsRead",
												"id": 351
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 258,
									"character": 21
								}
							]
						},
						{
							"id": 369,
							"name": "getKeysByPrefix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 370,
									"name": "getKeysByPrefix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all keys matching the prefix as an array. If no prefix is defined all keys are returned.",
										"text": "#### Example\n\n```js\n const keys = await firebase.config().getKeysByPrefix('feature_');\n```\n"
									},
									"parameters": [
										{
											"id": 371,
											"name": "prefix",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "A prefix value to match keys by. Leave blank to retrieve all keys.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 271,
									"character": 19
								}
							]
						},
						{
							"id": 375,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 376,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a ConfigValue by key.",
										"text": "#### Example\n\n```js\nconst configValue = await firebase.config().getValue('experiment');\nconsole.log('Source: ', configValue.source);\nconsole.log('Value: ', configValue.value);\n```\n"
									},
									"parameters": [
										{
											"id": 377,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A key used to retrieve a specific value.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ConfigValue",
												"id": 343
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 304,
									"character": 12
								}
							]
						},
						{
							"id": 372,
							"name": "getValuesByKeysPrefix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 373,
									"name": "getValuesByKeysPrefix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all config values for the keys matching the prefix provided. In no prefix is provided all values are returned.",
										"text": "#### Example\n\n```js\nconst values = await firebase.config().getValuesByKeysPrefix('feature_');\n\nvalues.forEach(($) => {\n  console.log('Source: ', $.source);\n  console.log('Value: ', $.value);\n});\n```\n"
									},
									"parameters": [
										{
											"id": 374,
											"name": "prefix",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "A prefix value to match values by. Leave blank to retrieve all values.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ConfigValues",
												"id": 346
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 289,
									"character": 25
								}
							]
						},
						{
							"id": 378,
							"name": "setConfigSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 379,
									"name": "setConfigSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the Remote Config settings, specifically the `isDeveloperModeEnabled` flag.",
										"text": "#### Example\n\n```js\nawait firebase.config().setConfigSettings({\n  isDeveloperModeEnabled: __DEV__,\n});\n```\n"
									},
									"parameters": [
										{
											"id": 380,
											"name": "configSettings",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A ConfigSettingsWrite instance used to set Remote Config settings.\n"
											},
											"type": {
												"type": "reference",
												"name": "ConfigSettingsWrite",
												"id": 349
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ConfigSettingsRead",
												"id": 351
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 319,
									"character": 21
								}
							]
						},
						{
							"id": 381,
							"name": "setDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 382,
									"name": "setDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets default values for the app to use when accessing values.\nAny data fetched and activated will override any default values. Any values in the defaults but not on Firebase will be untouched.",
										"text": "#### Example\n\n```js\nawait firebase.config().setDefaults({\n  experiment_enabled: false,\n});\n```\n"
									},
									"parameters": [
										{
											"id": 383,
											"name": "defaults",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A ConfigDefaults instance used to set default values.\n"
											},
											"type": {
												"type": "reference",
												"name": "ConfigDefaults",
												"id": 355
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 335,
									"character": 15
								}
							]
						},
						{
							"id": 384,
							"name": "setDefaultsFromResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 385,
									"name": "setDefaultsFromResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the default values from a resource file.\nOn iOS this is a plist file and on Android this is an XML defaultsMap file.",
										"text": "```js\n // TODO @ehesp\n```\n"
									},
									"parameters": [
										{
											"id": 386,
											"name": "resourceName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The plist/xml file name with no extension.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 347,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								387
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								359,
								361,
								364,
								367,
								369,
								375,
								372,
								378,
								381,
								384
							]
						}
					],
					"sources": [
						{
							"fileName": "config/lib/index.d.ts",
							"line": 191,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 355,
					"name": "ConfigDefaults",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An Interface representing a Config Defaults object.",
						"text": "#### Example\n\n```js\nawait firebase.config().setDefaults({\n  experiment_enabled: false,\n});\n```\n"
					},
					"indexSignature": [
						{
							"id": 356,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "An Interface representing a Config Defaults object.",
								"text": "#### Example\n\n```js\nawait firebase.config().setDefaults({\n  experiment_enabled: false,\n});\n```\n"
							},
							"parameters": [
								{
									"id": 357,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "config/lib/index.d.ts",
							"line": 174,
							"character": 33
						}
					]
				},
				{
					"id": 351,
					"name": "ConfigSettingsRead",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An Interface representing readable config settings.",
						"text": "#### Example\n\n```js\nconst settings = await firebase.config().getConfigSettings();\nconsole.log('Last fetched time: ', settings.lastFetchTime);\nconsole.log('Developer mode enabled': settings.isDeveloperModeEnabled);\nconsole.log('Last fetch status: ', settings.lastFetchStatus);\n```\n"
					},
					"children": [
						{
							"id": 353,
							"name": "isDeveloperModeEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether developer mode is enabled. This is set manually via {@link config#setConfigSettings}"
							},
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 156,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 354,
							"name": "lastFetchStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The status of the latest Remote Config fetch action."
							},
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 160,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "success"
									},
									{
										"type": "stringLiteral",
										"value": "failure"
									},
									{
										"type": "stringLiteral",
										"value": "no_fetch_yet"
									},
									{
										"type": "stringLiteral",
										"value": "throttled"
									}
								]
							}
						},
						{
							"id": 352,
							"name": "lastFetchTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The number of milliseconds since the last Remote Config fetch was performed."
							},
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 152,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								353,
								354,
								352
							]
						}
					],
					"sources": [
						{
							"fileName": "config/lib/index.d.ts",
							"line": 148,
							"character": 37
						}
					]
				},
				{
					"id": 349,
					"name": "ConfigSettingsWrite",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An Interface representing settable config settings.",
						"text": "#### Example\n\nThe example below makes use of the React Native `__DEV__` global JavaScript variable which\nis exposed.\n\n```js\nawait firebase.config().setConfigSettings({\n  isDeveloperModeEnabled: __DEV__,\n});\n```\n"
					},
					"children": [
						{
							"id": 350,
							"name": "isDeveloperModeEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If enabled, default behaviour such as caching is disabled for a better debugging\nexperience."
							},
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 133,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								350
							]
						}
					],
					"sources": [
						{
							"fileName": "config/lib/index.d.ts",
							"line": 128,
							"character": 38
						}
					]
				},
				{
					"id": 343,
					"name": "ConfigValue",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An Interface representing a Remote Config value."
					},
					"children": [
						{
							"id": 344,
							"name": "source",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Where the value was retrieved from.",
								"text": "- `remote`:  If the value was retrieved from the server.\n- `default`: If the value was set as a default value.\n- `static`: If no value was found and a static default value was returned instead.\n\n#### Example\n\n```js\nconst configValue = await firebase.config().getValue('beta_enabled');\nconsole.log('Value source: ', configValue.source);\n```\n"
							},
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 81,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "remote"
									},
									{
										"type": "stringLiteral",
										"value": "default"
									},
									{
										"type": "stringLiteral",
										"value": "static"
									}
								]
							}
						},
						{
							"id": 345,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The returned value.",
								"text": "#### Example\n\n```js\nconst configValue = await firebase.config().getValue('beta_enabled');\nconsole.log('Value: ', configValue.value);\n```\n"
							},
							"sources": [
								{
									"fileName": "config/lib/index.d.ts",
									"line": 93,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								344,
								345
							]
						}
					],
					"sources": [
						{
							"fileName": "config/lib/index.d.ts",
							"line": 66,
							"character": 30
						}
					]
				},
				{
					"id": 346,
					"name": "ConfigValues",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An Interface representing multiple Config Values.",
						"text": "#### Example\n\n```js\nconst values = await firebase.config().getValuesByKeysPrefix('feature_');\n\nvalues.forEach(($) => {\n  console.log('Source: ', $.source);\n  console.log('Value: ', $.value);\n});\n```\n"
					},
					"indexSignature": [
						{
							"id": 347,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "An Interface representing multiple Config Values.",
								"text": "#### Example\n\n```js\nconst values = await firebase.config().getValuesByKeysPrefix('feature_');\n\nvalues.forEach(($) => {\n  console.log('Source: ', $.source);\n  console.log('Value: ', $.value);\n});\n```\n"
							},
							"parameters": [
								{
									"id": 348,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ConfigValue",
								"id": 343
							}
						}
					],
					"sources": [
						{
							"fileName": "config/lib/index.d.ts",
							"line": 110,
							"character": 31
						}
					]
				},
				{
					"id": 342,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "config/lib/index.d.ts",
							"line": 61,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						358
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						355,
						351,
						349,
						343,
						346,
						342
					]
				}
			],
			"sources": [
				{
					"fileName": "config/lib/index.d.ts",
					"line": 60,
					"character": 23
				}
			]
		},
		{
			"id": 395,
			"name": "Crashlytics",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase Crashlytics package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `crashlytics` package:\n\n```js\nimport { firebase } from '@react-native-firebase/crashlytics';\n\n// firebase.crashlytics().X\n```\n\n#### Example 2\n\nUsing the default export from the `crashlytics` package:\n\n```js\nimport crashlytics from '@react-native-firebase/crashlytics';\n\n// crashlytics().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/crashlytics';\n\n// firebase.crashlytics().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "crashlytics\n"
					}
				]
			},
			"children": [
				{
					"id": 397,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase Crashlytics service interface.",
						"text": "> This module is available for the default app only.\n\n#### Example\n\nGet the Crashlytics service for the default app:\n\n```js\nconst defaultAppCrashlytics = firebase.crashlytics();\n```\n"
					},
					"children": [
						{
							"id": 429,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 398,
							"name": "isCrashlyticsCollectionEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether Crashlytics reporting is enabled.",
								"text": "#### Example\n\n```js\nconst isEnabled = firebase.crashlytics().isCrashlyticsCollectionEnabled;\n```\n\n"
							},
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 87,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "true"
							}
						},
						{
							"id": 399,
							"name": "crash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 400,
									"name": "crash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cause your app to crash for testing purposes.",
										"text": "#### Example\n\n```js\nfirebase.crashlytics().crash();\n```\n\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 99,
									"character": 9
								}
							]
						},
						{
							"id": 401,
							"name": "log",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 402,
									"name": "log",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Log a message that will appear in any subsequent Crash or Non-fatal error reports.",
										"text": "#### Example\n\n```js\nfirebase.crashlytics().logEvent('Testing a crash');\nfirebase.crashlytics().crash();\n```\n"
									},
									"parameters": [
										{
											"id": 403,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 113,
									"character": 7
								}
							]
						},
						{
							"id": 404,
							"name": "recordError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 405,
									"name": "recordError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Record a JavaScript Error.",
										"text": "The JavaScript stack trace is converted into a mock native iOS or Android exception before submission.\n\n#### Example\n\n```js\nfirebase.crashlytics().recordError(\n new Error('An error was caught')\n);\n```\n"
									},
									"parameters": [
										{
											"id": 406,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Expects an instance of Error; e.g. classes that extend Error will also be supported.\n"
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 130,
									"character": 15
								}
							]
						},
						{
							"id": 416,
							"name": "setAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 417,
									"name": "setAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a string value to be associated with the given attribute name which will be visible in the Firebase Crashlytics console.",
										"text": "#### Example\n\n```js\nawait firebase.crashlytics().setAttribute('role', 'admin');\n```\n"
									},
									"parameters": [
										{
											"id": 418,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The name of the attribute to set."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 419,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string value for the given attribute.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 195,
									"character": 16
								}
							]
						},
						{
							"id": 420,
							"name": "setAttributes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 421,
									"name": "setAttributes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Like `setAttribute` but for multiple attributes.",
										"text": "#### Example\n\n```js\nawait firebase.crashlytics().setAttributes({\n  role: 'admin',\n  followers: '13',\n});\n```\n"
									},
									"parameters": [
										{
											"id": 422,
											"name": "attributes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An object of key/value attribute name and values.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 423,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 424,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 425,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "crashlytics/lib/index.d.ts",
															"line": 211,
															"character": 29
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 211,
									"character": 17
								}
							]
						},
						{
							"id": 426,
							"name": "setCrashlyticsCollectionEnabled",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 427,
									"name": "setCrashlyticsCollectionEnabled",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Enable/disable Crashlytics reporting.",
										"text": "Use this for opt-in first user data collection flows combined with `firebase.json` settings to disable auto collection.\n\n#### Example\n\n```js\n// Disable crash reporting\nawait firebase.crashlytics().setCrashlyticsCollectionEnabled(false);\n```\n"
									},
									"parameters": [
										{
											"id": 428,
											"name": "enabled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A boolean value representing whether to enable Crashlytics error collection.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 227,
									"character": 35
								}
							]
						},
						{
							"id": 413,
							"name": "setUserEmail",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 414,
									"name": "setUserEmail",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Optionally specify a user email which will be visible in the Firebase Crashlytics console.",
										"text": "If you choose to collect contact information it is strongly recommend that you disclose this in your apps privacy policy.\n\n#### Example\n\n```js\nfirebase.crashlytics().setUserEmail('user@gmail.com');\n```\n"
									},
									"parameters": [
										{
											"id": 415,
											"name": "userEmail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A users email address.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 181,
									"character": 16
								}
							]
						},
						{
							"id": 407,
							"name": "setUserId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 408,
									"name": "setUserId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Specify a user identifier which will be visible in the Firebase Crashlytics console.",
										"text": "It is recommended for privacy purposes that this value be a value that's meaningless to a third-party\nobserver; such as an arbitrary string that ties an end-user to a record in your system e.g. a database record id.\n\n#### Example\n\n```js\n// Custom user id\nawait firebase.crashlytics().setUserId('123456789');\n// Firebase auth uid\nawait firebase.crashlytics().setUserId(\n firebase.auth().currentUser.uid\n);\n```\n"
									},
									"parameters": [
										{
											"id": 409,
											"name": "userId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An arbitrary string that ties an end-user to a record in your system e.g. a database record id.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 151,
									"character": 13
								}
							]
						},
						{
							"id": 410,
							"name": "setUserName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 411,
									"name": "setUserName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Optionally specify a user name which will be visible in the Firebase Crashlytics console.",
										"text": "If you choose to collect contact information it is strongly recommend that you disclose this in your apps privacy policy.\n\n#### Example\n\n```js\nawait firebase.crashlytics().setUserName('Alias');\n```\n"
									},
									"parameters": [
										{
											"id": 412,
											"name": "userName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A string representing an end-user's name or app username\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "crashlytics/lib/index.d.ts",
									"line": 166,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								429,
								398
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								399,
								401,
								404,
								416,
								420,
								426,
								413,
								407,
								410
							]
						}
					],
					"sources": [
						{
							"fileName": "crashlytics/lib/index.d.ts",
							"line": 76,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 396,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "crashlytics/lib/index.d.ts",
							"line": 61,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						397
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						396
					]
				}
			],
			"sources": [
				{
					"fileName": "crashlytics/lib/index.d.ts",
					"line": 60,
					"character": 28
				}
			]
		},
		{
			"id": 437,
			"name": "Fiam",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase In-App Messaging package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `fiam` package:\n\n```js\nimport { firebase } from '@react-native-firebase/fiam';\n\n// firebase.fiam().X\n```\n\n#### Example 2\n\nUsing the default export from the `fiam` package:\n\n```js\nimport fiam from '@react-native-firebase/fiam';\n\n// fiam().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/fiam';\n\n// firebase.fiam().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "fiam\n"
					}
				]
			},
			"children": [
				{
					"id": 439,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase In-App Messaging service interface.",
						"text": "> This module is available for the default app only.\n\n#### Example\n\nGet the  In-App Messaging service for the default app:\n\n```js\nconst defaultAppFiam = firebase.fiam();\n```\n"
					},
					"children": [
						{
							"id": 448,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 444,
							"name": "isAutomaticDataCollectionEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether automatic data collection is enabled or not.",
								"text": "#### Example\n\n```js\nconst isDataCollectionEnabled = firebase.fiam().isAutomaticDataCollectionEnabled;\n```\n"
							},
							"sources": [
								{
									"fileName": "fiam/lib/index.d.ts",
									"line": 114,
									"character": 36
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 440,
							"name": "isMessagesDisplaySuppressed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether messages are suppressed or not.",
								"text": "#### Example\n\n```js\nconst isSuppressed = firebase.fiam().isMessagesDisplaySuppressed;\n```\n"
							},
							"sources": [
								{
									"fileName": "fiam/lib/index.d.ts",
									"line": 86,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 445,
							"name": "setAutomaticDataCollectionEnabled",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 446,
									"name": "setAutomaticDataCollectionEnabled",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Enable or disable automatic data collection for Firebase In-App Messaging.",
										"text": "When enabled, generates a registration token on app startup if there is no valid one and generates a new token\nwhen it is deleted (which prevents deleteInstanceId() from stopping the periodic sending of data).\n\nThis setting is persisted across app restarts and overrides the setting specified in your manifest/plist file.\n\n#### Example\n\n```js\n// Disable data collection\nfirebase.fiam().setAutomaticDataCollectionEnabled(false);\n```\n"
									},
									"parameters": [
										{
											"id": 447,
											"name": "enabled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Whether automatic data collection is enabled.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "fiam/lib/index.d.ts",
									"line": 133,
									"character": 37
								}
							]
						},
						{
							"id": 441,
							"name": "setMessagesDisplaySuppressed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 442,
									"name": "setMessagesDisplaySuppressed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Enable or disable suppression of Firebase In App Messaging messages.",
										"text": "When enabled, no in app messages will be rendered until either you disable suppression, or the app restarts.\nThis state is not persisted between app restarts.\n\n#### Example\n\n```js\n// Suppress messages\nawait firebase.fiam().setMessagesDisplaySuppressed(true);\n```\n"
									},
									"parameters": [
										{
											"id": 443,
											"name": "enabled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Whether messages should be suppressed.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "fiam/lib/index.d.ts",
									"line": 103,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								448,
								444,
								440
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								445,
								441
							]
						}
					],
					"sources": [
						{
							"fileName": "fiam/lib/index.d.ts",
							"line": 76,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 438,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "fiam/lib/index.d.ts",
							"line": 61,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						439
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						438
					]
				}
			],
			"sources": [
				{
					"fileName": "fiam/lib/index.d.ts",
					"line": 60,
					"character": 21
				}
			]
		},
		{
			"id": 456,
			"name": "Firestore",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase Cloud Firestore package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `firestore` package:\n\n```js\nimport { firebase } from '@react-native-firebase/firestore';\n\n// firebase.firestore().X\n```\n\n#### Example 2\n\nUsing the default export from the `firestore` package:\n\n```js\nimport firestore from '@react-native-firebase/firestore';\n\n// firestore().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/firestore';\n\n// firebase.firestore().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "firestore\n"
					}
				]
			},
			"children": [
				{
					"id": 458,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase Cloud Firestore service is available for the default app or a given app.",
						"text": "#### Example 1\n\nGet the firestore instance for the **default app**:\n\n```js\nconst firestoreForDefaultApp = firebase.firestore();\n```\n\n#### Example 2\n\nGet the firestore instance for a **secondary app**:\n\n```js\nconst otherApp = firebase.app('otherApp');\nconst firestoreForOtherApp = firebase.firestore(otherApp);\n```\n\n"
					},
					"children": [
						{
							"id": 459,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								459
							]
						}
					],
					"sources": [
						{
							"fileName": "firestore/lib/index.d.ts",
							"line": 84,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 457,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "firestore/lib/index.d.ts",
							"line": 61,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						458
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						457
					]
				}
			],
			"sources": [
				{
					"fileName": "firestore/lib/index.d.ts",
					"line": 60,
					"character": 26
				}
			]
		},
		{
			"id": 467,
			"name": "Functions",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase Cloud Functions package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `functions` package:\n\n```js\nimport { firebase } from '@react-native-firebase/functions';\n\n// firebase.functions().X\n```\n\n#### Example 2\n\nUsing the default export from the `functions` package:\n\n```js\nimport functions from '@react-native-firebase/functions';\n\n// functions().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/functions';\n\n// firebase.functions().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "functions\n"
					}
				]
			},
			"children": [
				{
					"id": 500,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase Cloud Functions service is available for the default app, a given app or a specified region.",
						"text": "> The default functions region for all apps is `us-central1`.\n\n#### Example 1\n\nGet the functions instance for the **default app**:\n\n```js\nconst functionsForDefaultApp = firebase.functions();\n```\n\n#### Example 2\n\nGet the functions instance for a **secondary app**:\n\n```js\nconst otherApp = firebase.app('otherApp');\nconst functionsForOtherApp = firebase.functions(otherApp);\n```\n\n#### Example 3\n\nGet the functions instance for a **specific functions region**:\n\n```js\nconst defaultApp = firebase.app();\nconst functionsForRegion = defaultApp.functions('europe-west1');\n\nconst otherApp = firebase.app('otherApp');\nconst functionsForOtherAppRegion = otherApp.functions('europe-west1');\n```\n\n"
					},
					"children": [
						{
							"id": 507,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 501,
							"name": "httpsCallable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 502,
									"name": "httpsCallable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets an `HttpsCallable` instance that refers to the function with the given\nname.",
										"text": "#### Example\n\n```js\nconst instance = firebase.functions().httpsCallable('order');\n\ntry {\n const response = await instance({\n   id: '12345',\n });\n} catch (e) {\n console.error(e);\n}\n```\n",
										"returns": "The `HttpsCallable` instance.\n"
									},
									"parameters": [
										{
											"id": 503,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The name of the https callable function."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "HttpsCallable",
										"id": 470
									}
								}
							],
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 318,
									"character": 17
								}
							]
						},
						{
							"id": 504,
							"name": "useFunctionsEmulator",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 505,
									"name": "useFunctionsEmulator",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Changes this instance to point to a Cloud Functions emulator running\nlocally.",
										"text": "See https://firebase.google.com/docs/functions/local-emulator\n\n#### Example\n\n```js\nif (__DEV__) {\n  firebase.functions().useFunctionsEmulator('http://10.0.0.8:1337');\n}\n```\n"
									},
									"parameters": [
										{
											"id": 506,
											"name": "origin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The origin string of the local emulator started via firebase tools\n\"http://10.0.0.8:1337\".\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 337,
									"character": 24
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								507
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								501,
								504
							]
						}
					],
					"sources": [
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 296,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 470,
					"name": "HttpsCallable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An HttpsCallable is a reference to a \"callable\" http trigger in\nGoogle Cloud Functions.",
						"text": "#### Example\n\n```js\n// Create a HttpsCallable instance\nconst instance = firebase.functions().httpsCallable('order');\n\ntry {\n const response = await instance({\n   id: '12345',\n });\n} catch (e) {\n console.error(e);\n}\n```\n"
					},
					"signatures": [
						{
							"id": 471,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "An HttpsCallable is a reference to a \"callable\" http trigger in\nGoogle Cloud Functions.",
								"text": "#### Example\n\n```js\n// Create a HttpsCallable instance\nconst instance = firebase.functions().httpsCallable('order');\n\ntry {\n const response = await instance({\n   id: '12345',\n });\n} catch (e) {\n console.error(e);\n}\n```\n"
							},
							"parameters": [
								{
									"id": 472,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HttpsCallableResult",
										"id": 468
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 146,
							"character": 32
						}
					]
				},
				{
					"id": 468,
					"name": "HttpsCallableResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An HttpsCallableResult wraps a single result from a function call."
					},
					"children": [
						{
							"id": 469,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 124,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								469
							]
						}
					],
					"sources": [
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 123,
							"character": 38
						}
					]
				},
				{
					"id": 473,
					"name": "HttpsError",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An HttpsError wraps a single error from a function call.",
						"text": "#### Example\n\n```js\ntry {\n await firebase.functions().httpsCallable('order')();\n} catch (httpsError) {\n  console.log('Message', httpsError.message);\n\n  // Check code\n  if (httpsError.code === firebase.functions.HttpsErrorCode.NOT_FOUND) {\n    console.error('Functions endpoint \"order\" not found');\n  }\n}\n```\n"
					},
					"children": [
						{
							"id": 479,
							"name": "Error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Volumes/Projects/Projects/@react-native-firebase/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 974,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ErrorConstructor"
							}
						},
						{
							"id": 474,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A standard error code that will be returned to the client. This also\ndetermines the HTTP status code of the response, as defined in code.proto.",
								"text": "#### Example\n\n```js\ntry {\n await firebase.functions().httpsCallable('order')();\n} catch (httpsError) {\n  console.error(httpsError.code);\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 183,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionsErrorCode",
								"id": 508
							}
						},
						{
							"id": 475,
							"name": "details",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Extra data to be converted to JSON and included in the error response.",
								"text": "```js\ntry {\n await firebase.functions().httpsCallable('order')();\n} catch (httpsError) {\n  if (httpsError.details) {\n    console.error(httpsError.details);\n  }\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 197,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 477,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Volumes/Projects/Projects/@react-native-firebase/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 964,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 476,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Volumes/Projects/Projects/@react-native-firebase/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 963,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 478,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Volumes/Projects/Projects/@react-native-firebase/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 965,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Error.stack"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								479,
								474,
								475,
								477,
								476,
								478
							]
						}
					],
					"sources": [
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 168,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				},
				{
					"id": 480,
					"name": "HttpsErrorCode",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The HttpsErrorCode interface provides access to all FunctionsErrorCode\ntype aliases.",
						"text": "#### Example\n\n```js\ntry {\n await firebase.functions().httpsCallable('order')();\n} catch (httpsError) {\n switch(httpsError.code) {\n   case firebase.functions.HttpsErrorCode.NOT_FOUND:\n     console.error('Functions endpoint not found');\n     break;\n   case firebase.functions.HttpsErrorCode.CANCELLED:\n     console.error('The operation was cancelled');\n     break;\n   default:\n     console.error('An error occurred');\n     break;\n }\n}\n```\n"
					},
					"children": [
						{
							"id": 492,
							"name": "ABORTED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "aborted"
							}
						},
						{
							"id": 487,
							"name": "ALREADY_EXISTS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 231,
									"character": 18
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "already-exists"
							}
						},
						{
							"id": 482,
							"name": "CANCELLED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 226,
									"character": 13
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "cancelled"
							}
						},
						{
							"id": 497,
							"name": "DATA_LOSS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 241,
									"character": 13
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "data-loss"
							}
						},
						{
							"id": 485,
							"name": "DEADLINE_EXCEEDED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 229,
									"character": 21
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "deadline-exceeded"
							}
						},
						{
							"id": 491,
							"name": "FAILED_PRECONDITION",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 235,
									"character": 23
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "failed-precondition"
							}
						},
						{
							"id": 495,
							"name": "INTERNAL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 239,
									"character": 12
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "internal"
							}
						},
						{
							"id": 484,
							"name": "INVALID_ARGUMENT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 228,
									"character": 20
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "invalid-argument"
							}
						},
						{
							"id": 486,
							"name": "NOT_FOUND",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 230,
									"character": 13
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "not-found"
							}
						},
						{
							"id": 481,
							"name": "OK",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 225,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "ok"
							}
						},
						{
							"id": 493,
							"name": "OUT_OF_RANGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 237,
									"character": 16
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "out-of-range"
							}
						},
						{
							"id": 488,
							"name": "PERMISSION_DENIED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 232,
									"character": 21
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "permission-denied"
							}
						},
						{
							"id": 490,
							"name": "RESOURCE_EXHAUSTED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 234,
									"character": 22
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "resource-exhausted"
							}
						},
						{
							"id": 489,
							"name": "UNAUTHENTICATED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 233,
									"character": 19
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "unauthenticated"
							}
						},
						{
							"id": 496,
							"name": "UNAVAILABLE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 240,
									"character": 15
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "unavailable"
							}
						},
						{
							"id": 494,
							"name": "UNIMPLEMENTED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 238,
									"character": 17
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "unimplemented"
							}
						},
						{
							"id": 483,
							"name": "UNKNOWN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 227,
									"character": 11
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								492,
								487,
								482,
								497,
								485,
								491,
								495,
								484,
								486,
								481,
								493,
								488,
								490,
								489,
								496,
								494,
								483
							]
						}
					],
					"sources": [
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 224,
							"character": 33
						}
					]
				},
				{
					"id": 498,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "firebase.functions.X"
					},
					"children": [
						{
							"id": 499,
							"name": "HttpsErrorCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Uppercase + underscored variables of {@link functions.FunctionsErrorCode}",
								"text": "#### Example\n\n```js\nfirebase.functions.HttpsErrorCode.OK;\nfirebase.functions.HttpsErrorCode.NOT_FOUND;\n```\n"
							},
							"sources": [
								{
									"fileName": "functions/lib/index.d.ts",
									"line": 258,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "HttpsErrorCode",
								"id": 480
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								499
							]
						}
					],
					"sources": [
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 247,
							"character": 26
						}
					]
				},
				{
					"id": 508,
					"name": "FunctionsErrorCode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The set of Firebase Functions status codes.",
						"tags": [
							{
								"tag": "note",
								"text": "\nThe codes are the same at the ones exposed by [gRPC](https://github.com/grpc/grpc/blob/master/doc/statuscodes.md).\n\nPossible values:\n- `cancelled`: The operation was cancelled (typically by the caller).\n- `unknown`: Unknown error or an error from a different error domain.\n- `invalid-argument`: Client specified an invalid argument. Note that this\n  differs from `failed-precondition`. `invalid-argument` indicates\n  arguments that are problematic regardless of the state of the system\n  (e.g. an invalid field name).\n- `deadline-exceeded`: Deadline expired before operation could complete.\n  For operations that change the state of the system, this error may be\n  returned even if the operation has completed successfully. For example,\n  a successful response from a server could have been delayed long enough\n  for the deadline to expire.\n- `not-found`: Some requested document was not found.\n- `already-exists`: Some document that we attempted to create already\n  exists.\n- `permission-denied`: The caller does not have permission to execute the\n  specified operation.\n- `resource-exhausted`: Some resource has been exhausted, perhaps a\n  per-user quota, or perhaps the entire file system is out of space.\n- `failed-precondition`: Operation was rejected because the system is not\n  in a state required for the operation's execution.\n- `aborted`: The operation was aborted, typically due to a concurrency\n  issue like transaction aborts, etc.\n- `out-of-range`: Operation was attempted past the valid range.\n- `unimplemented`: Operation is not implemented or not supported/enabled.\n- `internal`: Internal errors. Means some invariants expected by\n  underlying system has been broken. If you see one of these errors,\n  something is very broken.\n- `unavailable`: The service is currently unavailable. This is most likely\n  a transient condition and may be corrected by retrying with a backoff.\n- `data-loss`: Unrecoverable data loss or corruption.\n- `unauthenticated`: The request does not have valid authentication\n  credentials for the operation.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "functions/lib/index.d.ts",
							"line": 101,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "ok"
							},
							{
								"type": "stringLiteral",
								"value": "cancelled"
							},
							{
								"type": "stringLiteral",
								"value": "unknown"
							},
							{
								"type": "stringLiteral",
								"value": "invalid-argument"
							},
							{
								"type": "stringLiteral",
								"value": "deadline-exceeded"
							},
							{
								"type": "stringLiteral",
								"value": "not-found"
							},
							{
								"type": "stringLiteral",
								"value": "already-exists"
							},
							{
								"type": "stringLiteral",
								"value": "permission-denied"
							},
							{
								"type": "stringLiteral",
								"value": "resource-exhausted"
							},
							{
								"type": "stringLiteral",
								"value": "failed-precondition"
							},
							{
								"type": "stringLiteral",
								"value": "aborted"
							},
							{
								"type": "stringLiteral",
								"value": "out-of-range"
							},
							{
								"type": "stringLiteral",
								"value": "unimplemented"
							},
							{
								"type": "stringLiteral",
								"value": "internal"
							},
							{
								"type": "stringLiteral",
								"value": "unavailable"
							},
							{
								"type": "stringLiteral",
								"value": "data-loss"
							},
							{
								"type": "stringLiteral",
								"value": "unauthenticated"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						500
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						470,
						468,
						473,
						480,
						498
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						508
					]
				}
			],
			"sources": [
				{
					"fileName": "functions/lib/index.d.ts",
					"line": 60,
					"character": 26
				}
			]
		},
		{
			"id": 517,
			"name": "Iid",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase Instance ID package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `iid` package:\n\n```js\nimport { firebase } from '@react-native-firebase/iid';\n\n// firebase.iid().X\n```\n\n#### Example 2\n\nUsing the default export from the `iid` package:\n\n```js\nimport iid from '@react-native-firebase/iid';\n\n// iid().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/iid';\n\n// firebase.iid().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "iid\n"
					}
				]
			},
			"children": [
				{
					"id": 519,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase Instance ID service interface.",
						"text": "> This module is available for the default app only.\n\n#### Example\n\nGet the Instance ID service for the default app:\n\n```js\nconst defaultAppIid = firebase.iid();\n```\n"
					},
					"children": [
						{
							"id": 532,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 522,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 523,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the Instance ID and all data associated with it. This stops the periodic sending of data to the Firebase\nbackend that was started when the Instance ID was generated.",
										"text": "A new Instance ID is asynchronously generated unless auto initialisation is turned off.\n\n#### Example\n\n```js\nawait firebase.iid().delete();\n```\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "iid/lib/index.d.ts",
									"line": 103,
									"character": 10
								}
							]
						},
						{
							"id": 528,
							"name": "deleteToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 529,
									"name": "deleteToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Revokes access to a scope for an entity previously authorized by `getToken()`.",
										"text": "#### Example\n\n```js\nawait firebase.iid().deleteToken(firebase.app().options.storageBucket, '*');\n```\n"
									},
									"parameters": [
										{
											"id": 530,
											"name": "authorizedEntity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Entity authorized by the token. Defaults to the apps' `messagingSenderId` option."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 531,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Action authorized for authorizedEntity. Defaults to '*'.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "iid/lib/index.d.ts",
									"line": 131,
									"character": 15
								}
							]
						},
						{
							"id": 520,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 521,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a identifier that uniquely identifies the app instance.",
										"text": "Once an Instance ID is generated, Firebase periodically sends information about the application\nand the device it's running on to the Firebase backend. To stop this, see `delete()`.\n\n#### Example\n\n```js\nconst id = firebase.iid().get();\n```\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "iid/lib/index.d.ts",
									"line": 89,
									"character": 7
								}
							]
						},
						{
							"id": 524,
							"name": "getToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 525,
									"name": "getToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a token that authorizes an Entity to perform an action on behalf of the application.",
										"text": "#### Example\n\n```js\nconst token = await firebase.iid().getToken(firebase.app().options.storageBucket, '*');\n```\n"
									},
									"parameters": [
										{
											"id": 526,
											"name": "authorizedEntity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Entity authorized by the token. Defaults to the apps `messagingSenderId` option."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 527,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Action authorized for authorizedEntity. Defaults to '*'.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "iid/lib/index.d.ts",
									"line": 117,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								532
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								522,
								528,
								520,
								524
							]
						}
					],
					"sources": [
						{
							"fileName": "iid/lib/index.d.ts",
							"line": 76,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 518,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "iid/lib/index.d.ts",
							"line": 61,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						519
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						518
					]
				}
			],
			"sources": [
				{
					"fileName": "iid/lib/index.d.ts",
					"line": 60,
					"character": 20
				}
			]
		},
		{
			"id": 540,
			"name": "Invites",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase Invites package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `invites` package:\n\n```js\nimport { firebase } from '@react-native-firebase/invites';\n\n// firebase.invites().X\n```\n\n#### Example 2\n\nUsing the default export from the `invites` package:\n\n```js\nimport invites from '@react-native-firebase/invites';\n\n// invites().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/invites';\n\n// firebase.invites().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "invites\n"
					}
				]
			},
			"children": [
				{
					"id": 546,
					"name": "AndroidInviteBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Android Invite representation. Instance is returned from {@link links.InviteBuilder#android}."
					},
					"children": [
						{
							"id": 547,
							"name": "setAdditionalReferralParameters",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 548,
									"name": "setAdditionalReferralParameters",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds query parameters to the play store referral URL when the app needs additional referral parameters for other\napplication component referrals. These parameters are added to the referral URL sent from the play store and are\navailable to be processed by other application components, for example Google Analytics. The parameters are set\nas name, value pairs that will be set as query parameter name and value on the referral URL.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.android.setAdditionalReferralParameters({\n  screen: 'Profile',\n});\n```\n"
									},
									"parameters": [
										{
											"id": 549,
											"name": "additionalReferralParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Referral parameters defined as string name value pairs.\n"
											},
											"type": {
												"type": "reference",
												"name": "AdditionalReferralParameters",
												"id": 543
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 108,
									"character": 35
								}
							]
						},
						{
							"id": 550,
							"name": "setEmailHtmlContent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 551,
									"name": "setEmailHtmlContent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the HTML-formatted (UTF-8 encoded, no JavaScript) content for invites sent through email. If set, this will\nbe sent instead of the default email.",
										"text": "emailHtmlContent must be valid HTML for standard email processing. The pattern `%%APPINVITE_LINK_PLACEHOLDER%%`\nshould be embedded in your htmlContent and will be replaced with the invitation URL.\nThis url is a link that will launch the app if already installed or take the user to the appropriate app store\nif not. In both cases the deep link will be available if provided using setDeepLink(Uri).\n",
										"tags": [
											{
												"tag": "warning",
												"text": "Cannot be used with {@link invites.InviteBuilder#setCallToActionText}\n\n#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.android.setEmailHtmlContent('<p><strong>Rich HTML content</strong></p>');\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 552,
											"name": "emailHtmlContent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The html-formatted content for the email.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 132,
									"character": 23
								}
							]
						},
						{
							"id": 553,
							"name": "setEmailSubject",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 554,
									"name": "setEmailSubject",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the subject for invites sent by email.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.android.emailSubject(`Hey ${user.name}, joint my app!`);\n```\n"
									},
									"parameters": [
										{
											"id": 555,
											"name": "emailSubject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The subject for the email.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 146,
									"character": 19
								}
							]
						},
						{
							"id": 556,
							"name": "setGoogleAnalyticsTrackingId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 557,
									"name": "setGoogleAnalyticsTrackingId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Google Analytics Tracking id. The tracking id should be created for the calling application under\nGoogle Analytics. See more about how to get a tracking id . The tracking id is recommended so that invitations\nsent from the calling application are available in Google Analytics.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.android.setGoogleAnalyticsTrackingId('UA-1234-5');\n```\n"
									},
									"parameters": [
										{
											"id": 558,
											"name": "gaTrackingId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "String of the form UA-xxxx-y\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 162,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								547,
								550,
								553,
								556
							]
						}
					],
					"sources": [
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 90,
							"character": 35
						}
					]
				},
				{
					"id": 559,
					"name": "InviteBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Invite builder representation returned from {@link invites#createInvitation}."
					},
					"children": [
						{
							"id": 560,
							"name": "android",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Set Android specific Invite properties",
								"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.android.setGoogleAnalyticsTrackingId('UA-1234-5');\n```\n"
							},
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 179,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "AndroidInviteBuilder",
								"id": 546
							}
						},
						{
							"id": 561,
							"name": "setAndroidClientId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 562,
									"name": "setAndroidClientId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the Android target client ID for the invitation.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.setAndroidClientId('xxxxxxxxxxxx');\n```\n"
									},
									"parameters": [
										{
											"id": 563,
											"name": "androidClientId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The android client ID.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 193,
									"character": 22
								}
							]
						},
						{
							"id": 564,
							"name": "setAndroidMinimumVersionCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 565,
									"name": "setAndroidMinimumVersionCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the minimum version of the android app installed on the receiving device. If this minimum version is not installed then the install flow will be triggered.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.setAndroidMinimumVersionCode(18);\n```\n"
									},
									"parameters": [
										{
											"id": 566,
											"name": "androidMinimumVersionCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Minimum version of the android app.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 207,
									"character": 32
								}
							]
						},
						{
							"id": 567,
							"name": "setCallToActionText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 568,
									"name": "setCallToActionText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Text shown on the email invitation for the user to accept the invitation. Default install text used if not set.",
										"tags": [
											{
												"tag": "warning",
												"text": "Cannot be used with {@link invites.AndroidInviteBuilder#setEmailHtmlContent}.\n\n#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.setCallToActionText('Join the app!');\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 569,
											"name": "callToActionText",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Text to use on the invitation button.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 223,
									"character": 23
								}
							]
						},
						{
							"id": 570,
							"name": "setCustomImage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 571,
									"name": "setCustomImage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets an image for invitations.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.setCustomImage('https://my-cdn.com/assets/invites.png');\n```\n"
									},
									"parameters": [
										{
											"id": 572,
											"name": "customImage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The image Uri. The Uri is required to be in absolute format. The supported image formats are \"jpg\", \"jpeg\" and \"png\".\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 237,
									"character": 18
								}
							]
						},
						{
							"id": 573,
							"name": "setDeepLink",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 574,
									"name": "setDeepLink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the deep link that is made available to the app when opened from the invitation. This deep link is made\navailable both to a newly installed application and an already installed application. The deep link can be sent\nto Android and other platforms so should be formatted to support deep links across platforms.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.deepLink('/invites');\n```\n"
									},
									"parameters": [
										{
											"id": 575,
											"name": "deepLink",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The app deep link.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 253,
									"character": 15
								}
							]
						},
						{
							"id": 576,
							"name": "setIOSClientId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 577,
									"name": "setIOSClientId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the iOS target client ID for the invitation.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.setIOSClientId('xxxxxxxxxxxx');\n```\n"
									},
									"parameters": [
										{
											"id": 578,
											"name": "iOSClientId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The iOS client ID.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 267,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								560
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								561,
								564,
								567,
								570,
								573,
								576
							]
						}
					],
					"sources": [
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 168,
							"character": 28
						}
					]
				},
				{
					"id": 582,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase Invites service interface.",
						"text": "> This module is available for the default app only.\n\n#### Example\n\nGet the Invites service for the default app:\n\n```js\nconst defaultAppInvites = firebase.invites();\n```\n"
					},
					"children": [
						{
							"id": 595,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 583,
							"name": "createInvitation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 584,
									"name": "createInvitation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an invitation via an InvitationBuilder instance.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app and share content');\n```\n"
									},
									"parameters": [
										{
											"id": 585,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The title displayed in the invitation."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 586,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The message displayed in the invitation.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InviteBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 351,
									"character": 20
								}
							]
						},
						{
							"id": 590,
							"name": "getInitialInvitation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 591,
									"name": "getInitialInvitation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Invitation that the app has been launched from. If the app was not launched from an Invitation the\nreturn value will be null.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().getInitialInvitation();\n\nif (invite) {\n console.log('Deeplink: ', invite.deepLink);\n console.log('ID: ', invite.invitationId);\n}\n```\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NativeInvite",
												"id": 579
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 390,
									"character": 24
								}
							]
						},
						{
							"id": 587,
							"name": "onInvitation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 588,
									"name": "onInvitation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "When an invitation is opened whilst the app is open, the listener is invoked with the invitation.\nReturns a function that when called unsubscribes the listener from further events.",
										"text": "#### Example\n\n```js\nfunction handleInvitation({ deepLink, invitationId}) {\n  console.log('Deeplink: ', deepLink);\n  console.log('ID: ', invitationId);\n}\n\nconst subscriber = firebase.invites().onInvitation(handleInvitation);\n\n// Unsubscribe from invitation listener\nsubscriber();\n```\n"
									},
									"parameters": [
										{
											"id": 589,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A function called when an invitation is opened.\n"
											},
											"type": {
												"type": "reference",
												"name": "InviteListener",
												"id": 596
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 373,
									"character": 16
								}
							]
						},
						{
							"id": 592,
							"name": "sendInvitation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 593,
									"name": "sendInvitation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Displays the invitation dialog which allows the user to select who received the invitation.\nReturns a promise that resolves with the created invitation IDs if the invitation is sent, otherwise it is\nrejected with an error.",
										"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app and share content');\nconst ids = await firebase.invites().sendInvitation(invite);\n```\n"
									},
									"parameters": [
										{
											"id": 594,
											"name": "invite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The invitation to send. Must be an instance of InviteBuilder\n"
											},
											"type": {
												"type": "reference",
												"name": "InviteBuilder",
												"id": 559
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 406,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								595
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								583,
								590,
								587,
								592
							]
						}
					],
					"sources": [
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 338,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 543,
					"name": "AdditionalReferralParameters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Additional referral parameters for {@link invites.AndroidInviteBuilder#setAdditionalReferralParameters}.",
						"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.android.setAdditionalReferralParameters({\n  screen: 'Profile',\n});\n```\n"
					},
					"indexSignature": [
						{
							"id": 544,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional referral parameters for {@link invites.AndroidInviteBuilder#setAdditionalReferralParameters}.",
								"text": "#### Example\n\n```js\nconst invite = firebase.invites().createInvitation('Join my app', 'Join my app with me and share content!');\ninvite.android.setAdditionalReferralParameters({\n  screen: 'Profile',\n});\n```\n"
							},
							"parameters": [
								{
									"id": 545,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 83,
							"character": 47
						}
					]
				},
				{
					"id": 579,
					"name": "NativeInvite",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A native invite representation returned from getInitialInvite and onInvite.",
						"text": "#### Example 1\n\nWhen an invitation has been opened from a closed/terminated app.\n\n```js\nconst invite = firebase.invites().getInitialInvitation();\n\nif (invite) {\n  console.log('Deeplink: ', invite.deepLink);\n  console.log('ID: ', invite.invitationId);\n}\n```\n\n#### Example 2\n\nWhen an invite has been opened and the app is running.\n\n```js\n function handleInvitation({ deepLink, invitationId}) {\n  console.log('Deeplink: ', deepLink);\n  console.log('ID: ', invitationId);\n }\n\n firebase.invites().onInvitation(handleInvitation);\n```\n"
					},
					"children": [
						{
							"id": 580,
							"name": "deepLink",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The deepLink that should be opened within the application."
							},
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 581,
							"name": "invitationId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The ID of the invitation that was opened."
							},
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 308,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								580,
								581
							]
						}
					],
					"sources": [
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 299,
							"character": 31
						}
					]
				},
				{
					"id": 541,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "firebase.invites.X"
					},
					"children": [
						{
							"id": 542,
							"name": "Invitation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Invitation returns an `InviteBuilder` instance used to send new invites."
							},
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 68,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "InviteBuilder",
								"id": 559
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								542
							]
						}
					],
					"sources": [
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 64,
							"character": 26
						}
					]
				},
				{
					"id": 596,
					"name": "InviteListener",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A type alias for an invite listener used with {@link invites#onInvitation}",
						"text": "#### Example\n\n```js\nfirebase.invites().onInvitation((invite) => {\n  console.log('Deeplink: ', invite.deepLink);\n  console.log('ID: ', invite.invitationId);\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "invites/lib/index.d.ts",
							"line": 323,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 597,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 598,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 599,
											"name": "nativeInvite",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NativeInvite",
												"id": 579
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "invites/lib/index.d.ts",
									"line": 323,
									"character": 30
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						546,
						559,
						582
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						543,
						579,
						541
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						596
					]
				}
			],
			"sources": [
				{
					"fileName": "invites/lib/index.d.ts",
					"line": 60,
					"character": 24
				}
			]
		},
		{
			"id": 607,
			"name": "Mlkit",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase ML Kit package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `mlkit` package:\n\n```js\nimport { firebase } from '@react-native-firebase/mlkit';\n\n// firebase.mlkit().X\n```\n\n#### Example 2\n\nUsing the default export from the `mlkit` package:\n\n```js\nimport mlkit from '@react-native-firebase/mlkit';\n\n// mlkit().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/mlkit';\n\n// firebase.mlkit().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "mlkit\n"
					}
				]
			},
			"children": [
				{
					"id": 609,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase ML Kit service interface.",
						"text": "> This module is available for the default app only.\n\n#### Example\n\nGet the ML Kit service for the default app:\n\n```js\nconst defaultAppMLKit = firebase.mlkit();\n```\n"
					},
					"children": [
						{
							"id": 610,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								610
							]
						}
					],
					"sources": [
						{
							"fileName": "mlkit/lib/index.d.ts",
							"line": 76,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 608,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "mlkit/lib/index.d.ts",
							"line": 61,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						609
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						608
					]
				}
			],
			"sources": [
				{
					"fileName": "mlkit/lib/index.d.ts",
					"line": 60,
					"character": 22
				}
			]
		},
		{
			"id": 618,
			"name": "Perf",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase Performance Monitoring package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `perf` package:\n\n```js\nimport { firebase } from '@react-native-firebase/perf';\n\n// firebase.perf().X\n```\n\n#### Example 2\n\nUsing the default export from the `perf` package:\n\n```js\nimport perf from '@react-native-firebase/perf';\n\n// perf().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/perf';\n\n// firebase.perf().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "perf\n"
					}
				]
			},
			"children": [
				{
					"id": 650,
					"name": "HttpMetric",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Metric used to collect data for network requests/responses. A new instance must be used for every request/response."
					},
					"children": [
						{
							"id": 651,
							"name": "getAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 652,
									"name": "getAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the value of an attribute. Returns null if it does not exist.",
										"text": "#### Example\n\n```js\nconst attribute = metric.getAttribute('user_role');\n```\n"
									},
									"parameters": [
										{
											"id": 653,
											"name": "attribute",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute to fetch the value of\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 228,
									"character": 16
								}
							]
						},
						{
							"id": 654,
							"name": "getAttributes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 655,
									"name": "getAttributes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an object of all the currently added attributes.",
										"text": "#### Example\n\n```js\nconst attributes = metric.getAttributes();\n\nattributes.forEach(($) => {\n  console.log($);\n});\n```\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 656,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 657,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 658,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "perf/lib/index.d.ts",
													"line": 243,
													"character": 20
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 243,
									"character": 17
								}
							]
						},
						{
							"id": 659,
							"name": "putAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 660,
									"name": "putAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a String value for the specified attribute. Updates the value of the attribute if it already exists.\nThe maximum number of attributes that can be added is 5.",
										"text": "#### Example\n\n```js\nmetric.putAttribute('user_role', 'admin');\n```\n"
									},
									"parameters": [
										{
											"id": 661,
											"name": "attribute",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute. Max length is 40 chars."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 662,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Value of the attribute. Max length is 100 chars.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 258,
									"character": 16
								}
							]
						},
						{
							"id": 663,
							"name": "removeAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 664,
									"name": "removeAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes an already added attribute. Does nothing if attribute does not exist.",
										"text": "#### Example\n\n```js\nmetric.removeAttribute('user_role');\n```\n"
									},
									"parameters": [
										{
											"id": 665,
											"name": "attribute",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute to be removed.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 271,
									"character": 19
								}
							]
						},
						{
							"id": 666,
							"name": "setHttpResponseCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 667,
									"name": "setHttpResponseCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the httpResponse code of the request.",
										"text": "#### Example\n\n```js\nconst response = await fetch(url);\nmetric.setHttpResponseCode(response.status);\n```",
										"tags": [
											{
												"tag": "warning",
												"text": "This is required for every request, if you do not provide this your metric will not be captured.\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 668,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Value must be greater than 0. Set to null to remove. Invalid usage will be logged natively.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 287,
									"character": 23
								}
							]
						},
						{
							"id": 669,
							"name": "setRequestPayloadSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 670,
									"name": "setRequestPayloadSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the size of the request payload.",
										"text": "#### Example\n\n```js\nconst response = await fetch(url);\nmetric.setRequestPayloadSize(response.headers.get('Content-Type'));\n```\n"
									},
									"parameters": [
										{
											"id": 671,
											"name": "bytes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Value must be greater than 0. Set to null to remove. Invalid usage will be logged natively.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 301,
									"character": 25
								}
							]
						},
						{
							"id": 675,
							"name": "setResponseContentType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 676,
									"name": "setResponseContentType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Content type of the response e.g. `text/html` or `application/json`.",
										"text": "#### Example\n\n```js\nconst response = await fetch(url);\nmetric.setResponsePayloadSize(response.headers.get('Content-Type'));\n```\n"
									},
									"parameters": [
										{
											"id": 677,
											"name": "contentType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Valid string of MIME type. Set to null to remove. Invalid usage will be logged natively.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 329,
									"character": 26
								}
							]
						},
						{
							"id": 672,
							"name": "setResponsePayloadSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 673,
									"name": "setResponsePayloadSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the size of the response payload.",
										"text": "#### Example\n\n```js\nconst response = await fetch(url);\nmetric.setResponsePayloadSize(response.headers.get('Content-Length'));\n```\n"
									},
									"parameters": [
										{
											"id": 674,
											"name": "bytes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Value must be greater than 0. Set to null to remove. Invalid usage will be logged natively.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 315,
									"character": 26
								}
							]
						},
						{
							"id": 678,
							"name": "start",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 679,
									"name": "start",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Marks the start time of the request. Does nothing if already started.",
										"text": "#### Example\n\n```js\nconst metric = firebase.perf().newHttpMetric('https://api.com/login', 'POST');\nawait metric.start();\n```\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 341,
									"character": 9
								}
							]
						},
						{
							"id": 680,
							"name": "stop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 681,
									"name": "stop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Marks the end time of the response and queues the network request metric on the device for transmission. Does nothing if already stopped.",
										"text": "#### Example\n\n```js\nconst metric = firebase.perf().newHttpMetric('https://api.com/login', 'POST');\nawait metric.start();\nmetric.putAttribute('user_role', 'admin');\nawait metric.stop();\n```\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 355,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								651,
								654,
								659,
								663,
								666,
								669,
								675,
								672,
								678,
								680
							]
						}
					],
					"sources": [
						{
							"fileName": "perf/lib/index.d.ts",
							"line": 216,
							"character": 25
						}
					]
				},
				{
					"id": 683,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Firebase Performance Monitoring service interface.",
						"text": "> This module is available for the default app only.\n\n#### Example\n\nGet the Performance Monitoring service for the default app:\n\n```js\nconst defaultAppPerf = firebase.perf();\n```\n"
					},
					"children": [
						{
							"id": 698,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 684,
							"name": "isPerformanceCollectionEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether performance monitoring is enabled or disabled.",
								"text": "#### Example\n\n```js\nconst isEnabled = firebase.perf().isPerformanceCollectionEnabled;\nconsole.log('Performance collection enabled: ', isEnabled);\n```\n"
							},
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 384,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 694,
							"name": "newHttpMetric",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 695,
									"name": "newHttpMetric",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a HttpMetric instance for collecting network performance data for a single request/response",
										"text": "#### Example\n\n```js\nconst metric = firebase.perf().newHttpMetric('https://api.com/user/1', 'GET');\nawait metric.start();\n```\n"
									},
									"parameters": [
										{
											"id": 696,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A valid url String, cannot be empty"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 697,
											"name": "httpMethod",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "One of the values GET, PUT, POST, DELETE, HEAD, PATCH, OPTIONS, TRACE, or CONNECT\n"
											},
											"type": {
												"type": "reference",
												"name": "HttpMethod",
												"id": 699
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "HttpMetric",
										"id": 650
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 440,
									"character": 17
								}
							]
						},
						{
							"id": 688,
							"name": "newTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 689,
									"name": "newTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a Trace instance with the given identifier.",
										"text": "#### Example\n\n```js\nconst trace = firebase.perf().newTrace('user_profile');\nawait trace.start();\n```\n"
									},
									"parameters": [
										{
											"id": 690,
											"name": "identifier",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the trace, no leading or trailing whitespace allowed, no leading underscore '_' character allowed, max length is 100.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Trace",
										"id": 619
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 412,
									"character": 12
								}
							]
						},
						{
							"id": 685,
							"name": "setPerformanceCollectionEnabled",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 686,
									"name": "setPerformanceCollectionEnabled",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Enables or disables performance monitoring.",
										"text": "#### Example\n\n```js\n// Disable performance monitoring collection\nawait firebase.perf().setPerformanceCollectionEnabled(false);\n```\n"
									},
									"parameters": [
										{
											"id": 687,
											"name": "enabled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Should performance monitoring be enabled\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 398,
									"character": 35
								}
							]
						},
						{
							"id": 691,
							"name": "startTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 692,
									"name": "startTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a Trace instance with the given identifier and immediately starts it.",
										"text": "#### Example\n\n```js\nconst trace = await firebase.perf().startTrace('user_profile');\n```\n"
									},
									"parameters": [
										{
											"id": 693,
											"name": "identifier",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the trace, no leading or trailing whitespace allowed, no leading underscore '_' character allowed, max length is 100.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Trace",
												"id": 619
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 425,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								698,
								684
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								694,
								688,
								685,
								691
							]
						}
					],
					"sources": [
						{
							"fileName": "perf/lib/index.d.ts",
							"line": 373,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 619,
					"name": "Trace",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Trace allows you to time the beginning to end of a certain action in your app with additional metric values and attributes."
					},
					"children": [
						{
							"id": 620,
							"name": "getAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 621,
									"name": "getAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the value of an attribute. Returns null if it does not exist.",
										"text": "#### Example\n\n```js\nconst attribute = trace.getAttribute('userId');\n```\n"
									},
									"parameters": [
										{
											"id": 622,
											"name": "attribute",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute to fetch the value of.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 96,
									"character": 16
								}
							]
						},
						{
							"id": 627,
							"name": "getMetric",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 628,
									"name": "getMetric",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the value of the metric with the given name in the current trace. If the metric\ndoesn't exist, it will not be created and a 0 is returned.",
										"text": "#### Example\n\n```js\nconst metric = trace.getMetric('hits');\n```\n"
									},
									"parameters": [
										{
											"id": 629,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the metric to get.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 125,
									"character": 13
								}
							]
						},
						{
							"id": 630,
							"name": "getMetrics",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 631,
									"name": "getMetrics",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an object of all the currently added metrics and their number values.",
										"text": "#### Example\n\n```js\nconst metrics = trace.getMetrics();\n\nmetrics.forEach(($) => {\n  console.log($);\n});\n```\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 632,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 633,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 634,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "perf/lib/index.d.ts",
													"line": 140,
													"character": 17
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 140,
									"character": 14
								}
							]
						},
						{
							"id": 639,
							"name": "incrementMetric",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 640,
									"name": "incrementMetric",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Increments the named metric by the `incrementBy` value.",
										"text": "If a metric with the given name doesn't exist, a new one will be created starting with the value of `incrementBy`.\n\n```js\ntrace.incrementMetric('hits', 1);\n```\n"
									},
									"parameters": [
										{
											"id": 641,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the metric to increment. Must not have a leading or trailing whitespace, no leading underscore '_' character and have a max length of 32 characters."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 642,
											"name": "incrementBy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value the metric should be incremented by.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 171,
									"character": 19
								}
							]
						},
						{
							"id": 623,
							"name": "putAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 624,
									"name": "putAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a String value for the specified attribute. Updates the value of the attribute if it already exists.\nThe maximum number of attributes that can be added is 5.",
										"text": "#### Example\n\n```js\ntrace.putAttribute('userId', '123456789');\n```\n"
									},
									"parameters": [
										{
											"id": 625,
											"name": "attribute",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the attribute. Max length is 40 chars."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 626,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Value of the attribute. Max length is 100 chars.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 111,
									"character": 16
								}
							]
						},
						{
							"id": 635,
							"name": "putMetric",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 636,
									"name": "putMetric",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the value of the named metric with the provided number.",
										"text": "If a metric with the given name exists it will be overwritten.\nIf a metric with the given name doesn't exist, a new one will be created.\n\n#### Example\n\n```js\ntrace.putMetric('hits', 1);\n```\n"
									},
									"parameters": [
										{
											"id": 637,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the metric to set. Must not have a leading or trailing whitespace, no leading underscore '_' character and have a max length of 32 characters."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 638,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value the metric should be set to.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 157,
									"character": 13
								}
							]
						},
						{
							"id": 643,
							"name": "removeMetric",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 644,
									"name": "removeMetric",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes a metric by name if it exists.",
										"text": "#### Example\n\n```js\ntrace.removeMetric('hits');\n```\n"
									},
									"parameters": [
										{
											"id": 645,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the metric to remove.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 184,
									"character": 16
								}
							]
						},
						{
							"id": 646,
							"name": "start",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 647,
									"name": "start",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Marks the start time of the trace. Does nothing if already started.",
										"text": "#### Example\n\n```js\nconst trace = firebase.perf().newTrace('example');\nawait trace.start();\n```\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 196,
									"character": 9
								}
							]
						},
						{
							"id": 648,
							"name": "stop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 649,
									"name": "stop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Marks the end time of the trace and queues the metric on the device for transmission. Does nothing if already stopped.",
										"text": "* #### Example\n\n```js\nconst trace = firebase.perf().newTrace('example');\nawait trace.start();\ntrace.putMetric('hits', 1);\nawait trace.stop();\n```\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "perf/lib/index.d.ts",
									"line": 210,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								620,
								627,
								630,
								639,
								623,
								635,
								643,
								646,
								648
							]
						}
					],
					"sources": [
						{
							"fileName": "perf/lib/index.d.ts",
							"line": 84,
							"character": 20
						}
					]
				},
				{
					"id": 682,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "perf/lib/index.d.ts",
							"line": 358,
							"character": 26
						}
					]
				},
				{
					"id": 699,
					"name": "HttpMethod",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type alias describing the valid HTTP methods accepted when creating a new {@link perf.HttpMetric} instance.",
						"text": "#### Example\n\n```js\nconst metric = perf().newHttpMetric('https://api.com/user', 'PATCH');\n```\n"
					},
					"sources": [
						{
							"fileName": "perf/lib/index.d.ts",
							"line": 70,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "GET"
							},
							{
								"type": "stringLiteral",
								"value": "HEAD"
							},
							{
								"type": "stringLiteral",
								"value": "PUT"
							},
							{
								"type": "stringLiteral",
								"value": "POST"
							},
							{
								"type": "stringLiteral",
								"value": "PATCH"
							},
							{
								"type": "stringLiteral",
								"value": "TRACE"
							},
							{
								"type": "stringLiteral",
								"value": "DELETE"
							},
							{
								"type": "stringLiteral",
								"value": "CONNECT"
							},
							{
								"type": "stringLiteral",
								"value": "OPTIONS"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						650,
						683,
						619
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						682
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						699
					]
				}
			],
			"sources": [
				{
					"fileName": "perf/lib/index.d.ts",
					"line": 60,
					"character": 21
				}
			]
		},
		{
			"id": 707,
			"name": "Storage",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Firebase Cloud Storage package for React Native.",
				"text": "#### Example 1\n\nAccess the firebase export from the `storage` package:\n\n```js\nimport { firebase } from '@react-native-firebase/storage';\n\n// firebase.storage().X\n```\n\n#### Example 2\n\nUsing the default export from the `storage` package:\n\n```js\nimport storage from '@react-native-firebase/storage';\n\n// storage().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/storage';\n\n// firebase.storage().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "storage\n"
					}
				]
			},
			"children": [
				{
					"id": 856,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The Cloud Storage service is available for the default app, a given app or a specific storage bucket.",
						"text": "#### Example 1\n\nGet the storage instance for the **default app**:\n\n```js\nconst storageForDefaultApp = firebase.storage();\n```\n\n#### Example 2\n\nGet the storage instance for a **secondary app**:\n\n```js\nconst otherApp = firebase.app('otherApp');\nconst storageForOtherApp = firebase.storage(otherApp);\n```\n\n#### Example 3\n\nGet the storage instance for a **specific storage bucket**:\n\n```js\nconst defaultApp = firebase.app();\nconst storageForBucket = defaultApp.storage('gs://another-bucket-url');\n\nconst otherApp = firebase.app('otherApp');\nconst storageForOtherAppBucket = otherApp.storage('gs://another-bucket-url');\n```\n\n"
					},
					"children": [
						{
							"id": 875,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 861,
							"name": "maxDownloadRetryTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "TODO.",
								"text": "#### Example\n\n```js\nconst downloadRetryTime = firebase.storage().maxUploadRetryTime;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 865,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 865,
							"name": "maxOperationRetryTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "TODO.",
								"text": "#### Example\n\n```js\nconst maxOperationRetryTime = firebase.storage().maxOperationRetryTime;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 889,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 857,
							"name": "maxUploadRetryTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "TODO.",
								"text": "#### Example\n\n```js\nconst uploadRetryTime = firebase.storage().maxUploadRetryTime;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 841,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 869,
							"name": "ref",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 870,
									"name": "ref",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a new {@link storage.Reference} instance.",
										"text": "#### Example\n\n```js\nconst maxOperationRetryTime = firebase.storage().maxOperationRetryTime;\n```\n"
									},
									"parameters": [
										{
											"id": 871,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional string pointing to a location on the storage bucket. If no path\nis provided, the returned reference will be the bucket root path.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Reference",
										"id": 765
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 916,
									"character": 7
								}
							]
						},
						{
							"id": 872,
							"name": "refFromURL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 873,
									"name": "refFromURL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a new {@link storage.Reference} instance from a storage bucket URL.",
										"text": "#### Example\n\n```js\nconst maxOperationRetryTime = firebase.storage().maxOperationRetryTime;\n```\n"
									},
									"parameters": [
										{
											"id": 874,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A storage bucket URL pointing to a single file or location. Must start with `gs://`,\ne.g. `gs://assets/logo.png` or `gs://assets`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Reference",
										"id": 765
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 930,
									"character": 14
								}
							]
						},
						{
							"id": 862,
							"name": "setMaxDownloadRetryTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 863,
									"name": "setMaxDownloadRetryTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "TODO.",
										"text": "#### Example\n\n```js\nawait firebase.storage().setMaxDownloadRetryTime(5000);\n```\n"
									},
									"parameters": [
										{
											"id": 864,
											"name": "time",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of miliseconds.... TODO\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 878,
									"character": 27
								}
							]
						},
						{
							"id": 866,
							"name": "setMaxOperationRetryTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 867,
									"name": "setMaxOperationRetryTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "TODO.",
										"text": "#### Example\n\n```js\nawait firebase.storage().setMaxOperationRetryTime(5000);\n```\n"
									},
									"parameters": [
										{
											"id": 868,
											"name": "time",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of miliseconds.... TODO\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 902,
									"character": 28
								}
							]
						},
						{
							"id": 858,
							"name": "setMaxUploadRetryTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 859,
									"name": "setMaxUploadRetryTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "TODO.",
										"text": "#### Example\n\n```js\nawait firebase.storage().setMaxUploadRetryTime(5000);\n```\n"
									},
									"parameters": [
										{
											"id": 860,
											"name": "time",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of milliseconds.... TODO\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 854,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								875,
								861,
								865,
								857
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								869,
								872,
								862,
								866,
								858
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 831,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 746,
					"name": "FullMetadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The full readable metadata returned by `TaskSnapshot.metadata` or `StorageReference.getMetadata()`."
					},
					"children": [
						{
							"id": 748,
							"name": "bucket",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The bucket this storage object is contained in.",
								"text": "#### Example Value\n\n```\ngs://my-project-storage-bucket\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 484,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 756,
							"name": "cacheControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The 'Cache-Control' HTTP header that will be set on the storage object when it's requested.",
								"text": "#### Example 1\n\nTo turn off caching, you can set the following cacheControl value.\n\n```js\n{\n  cacheControl: 'no-store',\n}\n```\n\n#### Example 2\n\nTo aggressively cache an object, e.g. static assets, you can set the following cacheControl value.\n\n```js\n{\n  cacheControl: 'public, max-age=31536000',\n}\n```\n\n[Learn more about this header on Mozilla.](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition)\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 399,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SettableMetadata.cacheControl",
								"id": 737
							}
						},
						{
							"id": 757,
							"name": "contentDisposition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The 'Content-Disposition' HTTP header that will be set on the storage object when it's requested.",
								"text": "[Learn more about this header on Mozilla.](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition)\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 406,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SettableMetadata.contentDisposition",
								"id": 738
							}
						},
						{
							"id": 758,
							"name": "contentEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The 'Content-Encoding' HTTP header that will be used on the storage object when it's requested.",
								"text": "[Learn more about this header on Mozilla.](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding)\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 413,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SettableMetadata.contentEncoding",
								"id": 739
							}
						},
						{
							"id": 759,
							"name": "contentLanguage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The 'Content-Language' HTTP header that will be set on the storage object when it's requested.",
								"text": "[Learn more about this header on Mozilla.](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Language)\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 420,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SettableMetadata.contentLanguage",
								"id": 740
							}
						},
						{
							"id": 760,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The 'Content-Type' HTTP header that will be set on the object when it's requested.",
								"text": "This is used to indicate the media type (or MIME type) of the object. When uploading a file\nFirebase Cloud Storage for React Native will attempt to automatically detect this if `contentType`\nis not already set, if it fails to detect a media type it will default to `application/octet-stream`.\n\nFor `DATA_URL` string formats uploaded via `putString` this will also be automatically extracted if available.\n\n#### Example\n\nSetting the content type as JSON, e.g. for when uploading a JSON string via `putString`.\n\n```js\n{\n  contentType: 'application/json',\n}\n```\n\n[Learn more about this header on Mozilla.](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type)\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 443,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SettableMetadata.contentType",
								"id": 741
							}
						},
						{
							"id": 761,
							"name": "customMetadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Additional user-defined custom metadata for this storage object.",
								"text": "String values only are supported for custom metadata property values.\n\n#### Example\n\nAdding a user controlled NSFW meta data field.\n\n```js\n{\n  customMetadata: {\n    'nsfw': 'true'\n  },\n}\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 461,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 762,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 763,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 764,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "storage/lib/index.d.ts",
													"line": 461,
													"character": 20
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SettableMetadata.customMetadata",
								"id": 742
							}
						},
						{
							"id": 749,
							"name": "fullPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The full path to this storage object in its bucket.",
								"text": "#### Example Value\n\n```\ninvertase/logo.png\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 495,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 750,
							"name": "generation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Storage object generation values enable users to uniquely identify data resources, e.g. object versioning.",
								"text": "Read more on generation on the [Google Cloud Storage documentation](https://cloud.google.com/storage/docs/generations-preconditions).\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 502,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 747,
							"name": "md5Hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A Base64-encoded MD5 hash of the storage object being uploaded."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 473,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 751,
							"name": "metageneration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Storage object metageneration values enable users to uniquely identify data resources, e.g. object versioning.",
								"text": "Read more on metageneration on the [Google Cloud Storage documentation](https://cloud.google.com/storage/docs/generations-preconditions).\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 509,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 752,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The short name of storage object in its bucket, e.g. it's file name.",
								"text": "#### Example Value\n\n```\nlogo.png\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 520,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 753,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The size of this storage object in bytes."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 525,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 754,
							"name": "timeCreated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A date string representing when this storage object was created.",
								"text": "#### Example Value\n\n```\n2019-05-02T00:34:56.264Z\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 536,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 755,
							"name": "updated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A date string representing when this storage object was last updated.",
								"text": "#### Example Value\n\n```\n2019-05-02T00:35:56.264Z\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 547,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								748,
								756,
								757,
								758,
								759,
								760,
								761,
								749,
								750,
								747,
								751,
								752,
								753,
								754,
								755
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 469,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SettableMetadata",
							"id": 736
						}
					]
				},
				{
					"id": 721,
					"name": "Path",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A collection of native device file paths to aid in the usage of file path based storage methods.",
						"text": "Concatenate a file path with your target file name when using `putFile` or `getFile`.\n\n```js\nfirebase.storage.Path;\n```\n"
					},
					"children": [
						{
							"id": 723,
							"name": "CachesDirectory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an absolute path to the application specific cache directory on the filesystem.",
								"text": "The system will automatically delete files in this directory when disk space is needed elsewhere on the device, starting with the oldest files first.\n\n```js\nfirebase.storage.Path.CachesDirectory;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 229,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 724,
							"name": "DocumentDirectory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an absolute path to the users Documents directory.",
								"text": "Use this directory to place documents that have been created by the user.\n\n```js\nfirebase.storage.Path.DocumentDirectory;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 240,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 727,
							"name": "ExternalDirectory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an absolute path to the directory on the primary shared/external storage device.",
								"text": "Here your application can place persistent files it owns. These files are internal to the application, and not typically visible to the user as media.\n\nReturns null if no external storage directory found, e.g. removable media has been ejected by the user.\n\n```js\nfirebase.storage.Path.ExternalDirectory;\n```\n",
								"tags": [
									{
										"tag": "android",
										"text": "Android only - iOS returns null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 277,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 728,
							"name": "ExternalStorageDirectory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an absolute path to the primary shared/external storage directory.",
								"text": "Traditionally this is an SD card, but it may also be implemented as built-in storage on a device.\n\nReturns null if no external storage directory found, e.g. removable media has been ejected by the user.\n\n```js\nfirebase.storage.Path.ExternalStorageDirectory;\n```\n",
								"tags": [
									{
										"tag": "android",
										"text": "Android only - iOS returns null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 292,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 726,
							"name": "LibraryDirectory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an absolute path to the apps library/resources directory.",
								"text": "E.g. this can be used for things like documentation, support files, and configuration files and generic resources.\n\n```js\nfirebase.storage.Path.LibraryDirectory;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 262,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 722,
							"name": "MainBundle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an absolute path to the applications main bundle.",
								"text": "```js\nfirebase.storage.Path.MainBundle;\n```\n",
								"tags": [
									{
										"tag": "ios",
										"text": "iOS only\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 218,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 730,
							"name": "MoviesDirectory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an absolute path to a directory in which to place movies that are available to the user.",
								"text": "```js\nfirebase.storage.Path.MoviesDirectory;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 310,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 729,
							"name": "PicturesDirectory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an absolute path to a directory in which to place pictures that are available to the user.",
								"text": "```js\nfirebase.storage.Path.PicturesDirectory;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 301,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 725,
							"name": "TempDirectory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an absolute path to a temporary directory.",
								"text": "Use this directory to create temporary files. The system will automatically delete files in this directory when disk space is needed elsewhere on the device, starting with the oldest files first.\n\n```js\nfirebase.storage.Path.TempDirectory;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 251,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								723,
								724,
								727,
								728,
								726,
								722,
								730,
								729,
								725
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 208,
							"character": 23
						}
					]
				},
				{
					"id": 765,
					"name": "Reference",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents a reference to a Google Cloud Storage object in React Native Firebase.",
						"text": "A reference can be used to upload and download storage objects, get/set storage object metadata, retrieve storage object download urls and delete storage objects.\n\n#### Example 1\n\nGet a reference to a specific storage path.\n\n```js\nconst ref = firebase.storage().ref('invertase/logo.png');\n```\n\n#### Example 2\n\nGet a reference to a specific storage path on another bucket in the same firebase project.\n\n```js\nconst ref = firebase.storage().refFromURL('gs://other-bucket/invertase/logo.png');\n```\n"
					},
					"children": [
						{
							"id": 766,
							"name": "bucket",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 574,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 768,
							"name": "fullPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 578,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 769,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 580,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 767,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 576,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Reference",
										"id": 765
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 770,
							"name": "root",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 582,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Reference",
								"id": 765
							}
						},
						{
							"id": 771,
							"name": "storage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 584,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Module",
								"id": 856
							}
						},
						{
							"id": 774,
							"name": "child",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 775,
									"name": "child",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 776,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Reference",
										"id": 765
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 588,
									"character": 9
								}
							]
						},
						{
							"id": 777,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 778,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 590,
									"character": 10
								}
							]
						},
						{
							"id": 779,
							"name": "getDownloadURL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 780,
									"name": "getDownloadURL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 592,
									"character": 18
								}
							]
						},
						{
							"id": 781,
							"name": "getMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 782,
									"name": "getMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "FullMetadata",
												"id": 746
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 594,
									"character": 15
								}
							]
						},
						{
							"id": 787,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 788,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 789,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Blob"
													},
													{
														"type": "reference",
														"name": "Uint8Array"
													},
													{
														"type": "reference",
														"name": "ArrayBuffer"
													}
												]
											}
										},
										{
											"id": 790,
											"name": "metadata",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "SettableMetadata",
												"id": 736
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Task",
										"id": 811
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 598,
									"character": 7
								}
							]
						},
						{
							"id": 783,
							"name": "putFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 784,
									"name": "putFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 785,
											"name": "localFilePath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 786,
											"name": "metadata",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "SettableMetadata",
												"id": 736
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Task",
										"id": 811
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 596,
									"character": 11
								}
							]
						},
						{
							"id": 791,
							"name": "putString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 792,
									"name": "putString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 793,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 794,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "StringFormat",
												"id": 708
											}
										},
										{
											"id": 795,
											"name": "metadata",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "SettableMetadata",
												"id": 736
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Task",
										"id": 811
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 600,
									"character": 13
								}
							]
						},
						{
							"id": 772,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 773,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 586,
									"character": 12
								}
							]
						},
						{
							"id": 796,
							"name": "updateMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 797,
									"name": "updateMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 798,
											"name": "metadata",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SettableMetadata",
												"id": 736
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "FullMetadata",
												"id": 746
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 602,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								766,
								768,
								769,
								767,
								770,
								771
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								774,
								777,
								779,
								781,
								787,
								783,
								791,
								772,
								796
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 571,
							"character": 28
						}
					]
				},
				{
					"id": 736,
					"name": "SettableMetadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An interface representing all the metadata properties that can be set.",
						"text": "This is used in updateMetadata, put, putString & putFile.\n"
					},
					"children": [
						{
							"id": 737,
							"name": "cacheControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The 'Cache-Control' HTTP header that will be set on the storage object when it's requested.",
								"text": "#### Example 1\n\nTo turn off caching, you can set the following cacheControl value.\n\n```js\n{\n  cacheControl: 'no-store',\n}\n```\n\n#### Example 2\n\nTo aggressively cache an object, e.g. static assets, you can set the following cacheControl value.\n\n```js\n{\n  cacheControl: 'public, max-age=31536000',\n}\n```\n\n[Learn more about this header on Mozilla.](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition)\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 399,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 738,
							"name": "contentDisposition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The 'Content-Disposition' HTTP header that will be set on the storage object when it's requested.",
								"text": "[Learn more about this header on Mozilla.](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition)\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 406,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 739,
							"name": "contentEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The 'Content-Encoding' HTTP header that will be used on the storage object when it's requested.",
								"text": "[Learn more about this header on Mozilla.](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding)\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 413,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 740,
							"name": "contentLanguage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The 'Content-Language' HTTP header that will be set on the storage object when it's requested.",
								"text": "[Learn more about this header on Mozilla.](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Language)\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 420,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 741,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The 'Content-Type' HTTP header that will be set on the object when it's requested.",
								"text": "This is used to indicate the media type (or MIME type) of the object. When uploading a file\nFirebase Cloud Storage for React Native will attempt to automatically detect this if `contentType`\nis not already set, if it fails to detect a media type it will default to `application/octet-stream`.\n\nFor `DATA_URL` string formats uploaded via `putString` this will also be automatically extracted if available.\n\n#### Example\n\nSetting the content type as JSON, e.g. for when uploading a JSON string via `putString`.\n\n```js\n{\n  contentType: 'application/json',\n}\n```\n\n[Learn more about this header on Mozilla.](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type)\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 443,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 742,
							"name": "customMetadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Additional user-defined custom metadata for this storage object.",
								"text": "String values only are supported for custom metadata property values.\n\n#### Example\n\nAdding a user controlled NSFW meta data field.\n\n```js\n{\n  customMetadata: {\n    'nsfw': 'true'\n  },\n}\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 461,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 743,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 744,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 745,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "storage/lib/index.d.ts",
													"line": 461,
													"character": 20
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								737,
								738,
								739,
								740,
								741,
								742
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 373,
							"character": 35
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "FullMetadata",
							"id": 746
						}
					]
				},
				{
					"id": 731,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Cloud Storage statics.",
						"text": "#### Example\n\n```js\nfirebase.storage;\n```\n"
					},
					"children": [
						{
							"id": 735,
							"name": "Path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A collection of native device file paths to aid in the usage of file path based storage methods.",
								"text": "#### Example\n\n```js\nfirebase.storage.Path;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 365,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Path",
								"id": 721
							}
						},
						{
							"id": 732,
							"name": "StringFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Possible string formats used for uploading via `StorageReference.putString()`",
								"text": "#### Example\n\n```js\nfirebase.storage.StringFormat;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 332,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "StringFormat",
								"id": 708
							}
						},
						{
							"id": 734,
							"name": "TaskEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An event to subscribe to that is triggered on a Upload or Download task.",
								"text": "#### Example\n\n```js\nfirebase.storage.TaskEvent;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 354,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "TaskEvent",
								"id": 713
							}
						},
						{
							"id": 733,
							"name": "TaskState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A collection of properties that indicates the current tasks state.",
								"text": "#### Example\n\n```js\nfirebase.storage.TaskState;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 343,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "TaskState",
								"id": 715
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								735,
								732,
								734,
								733
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 322,
							"character": 26
						}
					]
				},
				{
					"id": 708,
					"name": "StringFormat",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Possible string formats used for uploading via `StorageReference.putString()`",
						"text": "```js\nfirebase.storage.StringFormat;\n```\n"
					},
					"children": [
						{
							"id": 710,
							"name": "BASE64",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Base64 string format.",
								"text": "Learn more about Base64 [on the Mozilla Web Docs](https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding)\n\n#### Usage\n\n```js\nfirebase.storage.StringFormat.BASE64;\n```\n\n#### Example String Format\n\n```js\nconst sampleString = 'PEZvbyBCYXI+';\n```\n\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 105,
									"character": 10
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "base64"
							}
						},
						{
							"id": 711,
							"name": "BASE64URL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Base64Url string format.",
								"text": "#### Usage\n\n```js\nfirebase.storage.StringFormat.BASE64URL;\n```\n\n#### Example String Format\n\n```js\nconst sampleString = 'PEZvbyBCYXI-';\n```\n\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 123,
									"character": 13
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "base64url"
							}
						},
						{
							"id": 712,
							"name": "DATA_URL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Data URL string format.",
								"text": "#### Usage\n\n```js\nfirebase.storage.StringFormat.DATA_URL;\n```\n\n#### Example String Format\n\n```js\nconst sampleString = 'data:text/plain;base64,PEZvbyBCYXI+';\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 140,
									"character": 12
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "data_url"
							}
						},
						{
							"id": 709,
							"name": "RAW",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Raw string format.",
								"text": "#### Usage\n\n```js\nfirebase.storage.StringFormat.RAW;\n```\n\n#### Example String Format\n\n```js\nconst sampleString = '<Foo Bar>';\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 85,
									"character": 7
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "raw"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								710,
								711,
								712,
								709
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 69,
							"character": 31
						}
					]
				},
				{
					"id": 811,
					"name": "Task",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Storage Task used for Uploading or Downloading files.",
						"text": "#### Example 1\n\nGet a Upload Storage task to upload a string:\n\n```js\nconst string = '{ \"foo\": 1 }';\nconst task = firebase\n .storage()\n .ref('/foo/bar.json')\n .putString(string);\n```\n\n#### Example 2\n\nGet a Download Storage task to download a file:\n\n```js\nconst string = '{ \"foo\": 1 }';\nconst downloadTo = `${firebase.storage.Path.DocumentDirectory}/bar.json`;\n\nconst task = firebase\n .storage()\n .ref('/foo/bar.json')\n .getFile(downloadTo);\n```\n"
					},
					"children": [
						{
							"id": 816,
							"name": "cancel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 817,
									"name": "cancel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancel the current Download or Upload task.",
										"text": "#### Example\n\nCancel a task inside a state changed listener:\n\n```js\ntask.on('state_changed', taskSnapshot => {\n  console.log('Cancelling my task!');\n  task.cancel();\n});\n```\n\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 698,
									"character": 10
								}
							]
						},
						{
							"id": 842,
							"name": "catch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 843,
									"name": "catch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 844,
											"name": "onRejected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 845,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 846,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 847,
																	"name": "a",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "NativeFirebaseError"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "storage/lib/index.d.ts",
															"line": 724,
															"character": 21
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 724,
									"character": 9
								}
							]
						},
						{
							"id": 818,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 819,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 820,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "stringLiteral",
												"value": "state_changed"
											}
										},
										{
											"id": 821,
											"name": "nextOrObserver",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "TaskSnapshotObserver",
														"id": 799
													},
													{
														"type": "intrinsic",
														"name": "null"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 822,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 823,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 824,
																			"name": "a",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "TaskSnapshot",
																				"id": 848
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "storage/lib/index.d.ts",
																	"line": 709,
																	"character": 52
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 825,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 826,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 827,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 828,
																			"name": "a",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "NativeFirebaseError"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "storage/lib/index.d.ts",
																	"line": 710,
																	"character": 13
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 829,
											"name": "complete",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 830,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 831,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "storage/lib/index.d.ts",
																	"line": 711,
																	"character": 16
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 707,
									"character": 6
								}
							]
						},
						{
							"id": 812,
							"name": "pause",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 813,
									"name": "pause",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Pause the current Download or Upload task.",
										"text": "#### Example\n\nPause a running task inside a state changed listener:\n\n```js\ntask.on('state_changed', taskSnapshot => {\n  if (taskSnapshot.state === firebase.storage.TaskState.RUNNING) {\n    console.log('Pausing my task!');\n    task.pause();\n  }\n});\n```\n\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 660,
									"character": 9
								}
							]
						},
						{
							"id": 814,
							"name": "resume",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 815,
									"name": "resume",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resume the current Download or Upload task.",
										"text": "#### Example\n\nResume a previously paused task inside a state changed listener:\n\n```js\ntask.on('state_changed', taskSnapshot => {\n  // ... pause me ...\n  if (taskSnapshot.state === firebase.storage.TaskState.PAUSED) {\n    console.log('Resuming my task!');\n    task.resume();\n  }\n});\n```\n\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 680,
									"character": 10
								}
							]
						},
						{
							"id": 832,
							"name": "then",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 833,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 834,
											"name": "onFulfilled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 835,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 836,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 837,
																			"name": "a",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "TaskSnapshot",
																				"id": 848
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "storage/lib/index.d.ts",
																	"line": 720,
																	"character": 19
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 838,
											"name": "onRejected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 839,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 840,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 841,
																			"name": "a",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "NativeFirebaseError"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "storage/lib/index.d.ts",
																	"line": 721,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 719,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								816,
								842,
								818,
								812,
								814,
								832
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 642,
							"character": 23
						}
					]
				},
				{
					"id": 713,
					"name": "TaskEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An event to subscribe to that is triggered on a Upload or Download task.",
						"text": "Event subscription is created via `StorageTask.on()`.\n\n```js\nfirebase.storage.TaskEvent;\n```\n"
					},
					"children": [
						{
							"id": 714,
							"name": "STATE_CHANGED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An event that indicates that the tasks state has changed.",
								"text": "```js\nfirebase.storage.TaskEvent.STATE_CHANGED;\n```\n"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 160,
									"character": 17
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "state_changed"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								714
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 152,
							"character": 28
						}
					]
				},
				{
					"id": 848,
					"name": "TaskSnapshot",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A TaskSnapshot provides information about a storage tasks state.",
						"text": "#### Example 1\n\n```js\nfirebase\n  .storage()\n  .ref('/foo/bar.json')\n  .putString(JSON.stringify({ foo: 'bar' }))\n  .then((taskSnapshot) => {\n    if (taskSnapshot.state === firebase.storage.TaskState.SUCCESS) {\n      console.log('Total bytes uploaded: ', taskSnapshot.totalBytes);\n    }\n  });\n```\n\n#### Example 2\n\n```js\nconst task = firebase\n  .storage()\n  .ref('/foo/bar.json')\n  .putString(JSON.stringify({ foo: 'bar' }));\n\ntask.on('state_changed', taskSnapshot => {\n  if (taskSnapshot.state === firebase.storage.TaskState.PAUSED) {\n    console.log('Resuming my task!');\n    task.resume();\n  }\n});\n```\n"
					},
					"children": [
						{
							"id": 849,
							"name": "bytesTransferred",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The number of bytes currently transferred."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 764,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 855,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "If the {@link storage.TaskSnapshot#state} is `error`, returns a JavaScript error of the\ncurrent task snapshot."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 795,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "NativeFirebaseError",
								"id": 894
							}
						},
						{
							"id": 850,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The metadata of the tasks via a {@link storage.FullMetadata} interface."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 769,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "FullMetadata",
								"id": 746
							}
						},
						{
							"id": 851,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The {@link storage.Reference} of the task."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 774,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Reference",
								"id": 765
							}
						},
						{
							"id": 852,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The current state of the task snapshot."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 779,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "cancelled"
									},
									{
										"type": "stringLiteral",
										"value": "error"
									},
									{
										"type": "stringLiteral",
										"value": "paused"
									},
									{
										"type": "stringLiteral",
										"value": "running"
									},
									{
										"type": "stringLiteral",
										"value": "success"
									}
								]
							}
						},
						{
							"id": 853,
							"name": "task",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The parent {@link storage.Task} of this snapshot."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 784,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Task",
								"id": 811
							}
						},
						{
							"id": 854,
							"name": "totalBytes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The total amount of bytes for this task."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 789,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								849,
								855,
								850,
								851,
								852,
								853,
								854
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 760,
							"character": 31
						}
					]
				},
				{
					"id": 799,
					"name": "TaskSnapshotObserver",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 808,
							"name": "complete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 610,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 809,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 810,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "storage/lib/index.d.ts",
											"line": 610,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 804,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 608,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 805,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 806,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 807,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "NativeFirebaseError"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "storage/lib/index.d.ts",
											"line": 608,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 800,
							"name": "next",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 606,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 801,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 802,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 803,
													"name": "taskSnapshot",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "TaskSnapshot",
														"id": 848
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "storage/lib/index.d.ts",
											"line": 606,
											"character": 9
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								808,
								804,
								800
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 605,
							"character": 39
						}
					]
				},
				{
					"id": 715,
					"name": "TaskState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A collection of properties that indicates the current tasks state.",
						"text": "An event subscription is created via `StorageTask.on()`.\n\n```js\nfirebase.storage.TaskEvent;\n```\n"
					},
					"children": [
						{
							"id": 716,
							"name": "CANCELLED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Task has been cancelled by the user."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 176,
									"character": 13
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "cancelled"
							}
						},
						{
							"id": 717,
							"name": "ERROR",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An Error occurred, see TaskSnapshot.error for details."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 181,
									"character": 9
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "error"
							}
						},
						{
							"id": 718,
							"name": "PAUSED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Task has been paused. Resume the task via `StorageTask.resume()`."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 186,
									"character": 10
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "paused"
							}
						},
						{
							"id": 719,
							"name": "RUNNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Task is running. Pause the task via `StorageTask.pause()`"
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 191,
									"character": 11
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "running"
							}
						},
						{
							"id": 720,
							"name": "SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Task has completed successfully."
							},
							"sources": [
								{
									"fileName": "storage/lib/index.d.ts",
									"line": 196,
									"character": 11
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								716,
								717,
								718,
								719,
								720
							]
						}
					],
					"sources": [
						{
							"fileName": "storage/lib/index.d.ts",
							"line": 172,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						856
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						746,
						721,
						765,
						736,
						731,
						708,
						811,
						713,
						848,
						799,
						715
					]
				}
			],
			"sources": [
				{
					"fileName": "storage/lib/index.d.ts",
					"line": 61,
					"character": 24
				}
			]
		},
		{
			"id": 884,
			"name": "Utils",
			"kind": 2,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "React Native Firebase Utilities package.",
				"text": "#### Example 1\n\nAccess the firebase export from the `utils` package:\n\n```js\nimport { firebase } from '@react-native-firebase/utils';\n\n// firebase.utils().X\n```\n\n#### Example 2\n\nUsing the default export from the `utils` package:\n\n```js\nimport utils from '@react-native-firebase/utils';\n\n// utils().X\n```\n\n#### Example 3\n\nUsing the default export from the `app` package:\n\n```js\nimport firebase from '@react-native-firebase/app';\nimport '@react-native-firebase/utils';\n\n// firebase.utils().X\n```\n",
				"tags": [
					{
						"tag": "firebase",
						"text": "utils\n"
					}
				]
			},
			"children": [
				{
					"id": 886,
					"name": "Module",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The React Native Firebase Utils service interface.",
						"text": "> This module is available for the default app only.\n\n#### Example\n\nGet the Utils service for the default app:\n\n```js\nconst defaultAppUtils = firebase.utils();\n```\n"
					},
					"children": [
						{
							"id": 888,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "analytics/node_modules/@react-native-firebase/app-types/index.d.ts",
									"line": 179,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReactNativeFirebaseModule.app"
							}
						},
						{
							"id": 887,
							"name": "isRunningInTestLab",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns true if this app is running inside a Firebase Test Lab environment. Always returns false on iOS.",
								"tags": [
									{
										"tag": "android",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/lib/index.d.ts",
									"line": 82,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								888,
								887
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/lib/index.d.ts",
							"line": 76,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ReactNativeFirebaseModule"
						}
					]
				},
				{
					"id": 885,
					"name": "Statics",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "utils/lib/index.d.ts",
							"line": 61,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						886
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						885
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/lib/index.d.ts",
					"line": 60,
					"character": 22
				}
			]
		},
		{
			"id": 925,
			"name": "ReactNativeFirebaseModule",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 926,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 179,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "FirebaseApp",
						"id": 907
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						926
					]
				}
			],
			"sources": [
				{
					"fileName": "app-types/index.d.ts",
					"line": 178,
					"character": 38
				}
			]
		},
		{
			"id": 907,
			"name": "FirebaseApp",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 908,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name (identifier) for this App. '[DEFAULT]' is the default App."
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 124,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 909,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The (read-only) configuration options from the app initialization."
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 129,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "FirebaseOptions",
						"id": 927
					}
				},
				{
					"id": 910,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 911,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Make this app unusable and free up resources."
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 134,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						908,
						909
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						910
					]
				}
			],
			"sources": [
				{
					"fileName": "app-types/index.d.ts",
					"line": 120,
					"character": 28
				}
			]
		},
		{
			"id": 903,
			"name": "FirebaseAppConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 905,
					"name": "automaticDataCollectionEnabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 111,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 906,
					"name": "automaticResourceManagement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set to true it indicates that Firebase should close database connections\nautomatically when the app is in the background. Disabled by default."
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 117,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 904,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The Firebase App name, defaults to [DEFAULT] if none provided."
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 106,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						905,
						906,
						904
					]
				}
			],
			"sources": [
				{
					"fileName": "app-types/index.d.ts",
					"line": 102,
					"character": 34
				}
			]
		},
		{
			"id": 894,
			"name": "NativeFirebaseError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 902,
					"name": "Error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/Volumes/Projects/Projects/@react-native-firebase/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 974,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "ErrorConstructor"
					}
				},
				{
					"id": 895,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Firebase error code, e.g. `auth/invalid-email`"
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 22,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 896,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Firebase error message"
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 27,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 900,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "/Volumes/Projects/Projects/@react-native-firebase/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 963,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 897,
					"name": "namespace",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The firebase module namespace that this error originated from, e.g. 'analytics'"
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 32,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 898,
					"name": "nativeErrorCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The native sdks returned error code, different per platform"
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 37,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 899,
					"name": "nativeErrorMessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The native sdks returned error message, different per platform"
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 42,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 901,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Volumes/Projects/Projects/@react-native-firebase/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 965,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.stack"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						902,
						895,
						896,
						900,
						897,
						898,
						899,
						901
					]
				}
			],
			"sources": [
				{
					"fileName": "app-types/index.d.ts",
					"line": 18,
					"character": 36
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Error"
				}
			]
		},
		{
			"id": 912,
			"name": "ReactNativeFirebaseNamespace",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 924,
					"name": "SDK_VERSION",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The current React Native Firebase version."
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 175,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 923,
					"name": "apps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A (read-only) array of all the initialized Apps."
					},
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 170,
							"character": 6
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "FirebaseApp",
							"id": 907
						}
					}
				},
				{
					"id": 920,
					"name": "app",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 921,
							"name": "app",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve an instance of a FirebaseApp.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nconst app = firebase.app('foo');\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 922,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The optional name of the app to return ('[DEFAULT]' if omitted)\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp",
								"id": 907
							}
						}
					],
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 165,
							"character": 5
						}
					]
				},
				{
					"id": 913,
					"name": "initializeApp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 914,
							"name": "initializeApp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create (and initialize) a FirebaseApp."
							},
							"parameters": [
								{
									"id": 915,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options to configure the services used in the App."
									},
									"type": {
										"type": "reference",
										"name": "FirebaseOptions",
										"id": 927
									}
								},
								{
									"id": 916,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The optional config for your firebase app\n"
									},
									"type": {
										"type": "reference",
										"name": "FirebaseAppConfig",
										"id": 903
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp",
								"id": 907
							}
						},
						{
							"id": 917,
							"name": "initializeApp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create (and initialize) a FirebaseApp."
							},
							"parameters": [
								{
									"id": 918,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Options to configure the services used in the App."
									},
									"type": {
										"type": "reference",
										"name": "FirebaseOptions",
										"id": 927
									}
								},
								{
									"id": 919,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The optional name of the app to initialize ('[DEFAULT]' if\nomitted)\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "FirebaseApp",
								"id": 907
							}
						}
					],
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 144,
							"character": 15
						},
						{
							"fileName": "app-types/index.d.ts",
							"line": 153,
							"character": 15
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						924,
						923
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						920,
						913
					]
				}
			],
			"sources": [
				{
					"fileName": "app-types/index.d.ts",
					"line": 137,
					"character": 45
				}
			]
		},
		{
			"id": 927,
			"name": "FirebaseOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "app-types/index.d.ts",
					"line": 45,
					"character": 27
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 928,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"indexSignature": [
						{
							"id": 939,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 940,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 937,
							"name": "androidClientId",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "iOS only - The Android client ID used in Google AppInvite when an iOS app has its Android version, for\nexample \"12345.apps.googleusercontent.com\"."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 93,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 930,
							"name": "apiKey",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An API key used for authenticating requests from your app, e.g.\n\"AIzaSyDdVgKwhZl0sTTTLZ7iTmt1r3N2cJLnaDk\", used to identify your app to Google servers."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 55,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 929,
							"name": "appId",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"comment": {
								"shortText": "The Google App ID that is used to uniquely identify an instance of an app."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 49,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 936,
							"name": "clientId",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "iOS only - The OAuth2 client ID for iOS application used to authenticate Google users, for example\n\"12345.apps.googleusercontent.com\", used for signing in with Google."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 87,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 931,
							"name": "databaseURL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The database root URL, e.g. \"http://abc-xyz-123.firebaseio.com\"."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 60,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 938,
							"name": "deepLinkURLScheme",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "iOS only - The URL scheme used to set up Durable Deep Link service."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 98,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 933,
							"name": "gaTrackingId",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The tracking ID for Google Analytics, e.g. \"UA-12345678-1\", used to configure Google Analytics."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 935,
							"name": "messagingSenderId",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Project Number from the Google Developer's console, for example \"012345678901\", used to\nconfigure Google Cloud Messaging."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 81,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 932,
							"name": "projectId",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"comment": {
								"shortText": "The Project ID from the Firebase console, for example \"abc-xyz-123\"."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 65,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 934,
							"name": "storageBucket",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Google Cloud Storage bucket name, e.g. \"abc-xyz-123.storage.firebase.com\"."
							},
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 75,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								937,
								930,
								929,
								936,
								931,
								938,
								933,
								935,
								932,
								934
							]
						}
					],
					"sources": [
						{
							"fileName": "app-types/index.d.ts",
							"line": 45,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 960,
			"name": "ReactNativeFirebaseModuleAndStatics",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 961,
					"name": "M",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 962,
					"name": "S",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"sources": [
				{
					"fileName": "app-types/index.d.ts",
					"line": 246,
					"character": 47
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 963,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 964,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "M"
									}
								}
							],
							"children": [
								{
									"id": 965,
									"name": "SDK_VERSION",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "This React Native Firebase module version."
									},
									"sources": [
										{
											"fileName": "app-types/index.d.ts",
											"line": 252,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										965
									]
								}
							],
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 246,
									"character": 60
								}
							]
						}
					},
					{
						"type": "typeParameter",
						"name": "S"
					}
				]
			}
		},
		{
			"id": 966,
			"name": "ReactNativeFirebaseModuleAndStaticsWithApp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 967,
					"name": "M",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 968,
					"name": "S",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"sources": [
				{
					"fileName": "app-types/index.d.ts",
					"line": 255,
					"character": 54
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 969,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 970,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 971,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "FirebaseApp",
												"id": 47
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "M"
									}
								}
							],
							"children": [
								{
									"id": 972,
									"name": "SDK_VERSION",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "This React Native Firebase module version."
									},
									"sources": [
										{
											"fileName": "app-types/index.d.ts",
											"line": 261,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										972
									]
								}
							],
							"sources": [
								{
									"fileName": "app-types/index.d.ts",
									"line": 255,
									"character": 67
								}
							]
						}
					},
					{
						"type": "typeParameter",
						"name": "S"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				40,
				50,
				44,
				334,
				388,
				430,
				449,
				460,
				509,
				533,
				600,
				611,
				700,
				876,
				889,
				1,
				941,
				59,
				341,
				395,
				437,
				456,
				467,
				517,
				540,
				607,
				618,
				707,
				884
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				925
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				907,
				903,
				894,
				912
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				927,
				960,
				966
			]
		}
	]
}