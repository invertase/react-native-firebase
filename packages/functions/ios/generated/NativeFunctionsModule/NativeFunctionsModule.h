/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#ifndef __cplusplus
#error This file must be compiled as Obj-C++. If you are importing it, you must change your file extension to .mm.
#endif

// Avoid multiple includes of NativeFunctionsModule symbols
#ifndef NativeFunctionsModule_H
#define NativeFunctionsModule_H

#import <Foundation/Foundation.h>
#import <RCTRequired/RCTRequired.h>
#import <RCTTypeSafety/RCTConvertHelpers.h>
#import <RCTTypeSafety/RCTTypedModuleConstants.h>
#import <React/RCTBridgeModule.h>
#import <React/RCTCxxConvert.h>
#import <React/RCTManagedPointer.h>
#import <ReactCommon/RCTTurboModule.h>
#import <optional>
#import <vector>


NS_ASSUME_NONNULL_BEGIN
namespace JS {
  namespace NativeFunctionsModule {
    struct SpecHttpsCallableData {
      id<NSObject> data() const;

      SpecHttpsCallableData(NSDictionary *const v) : _v(v) {}
    private:
      NSDictionary *_v;
    };
  }
}

@interface RCTCxxConvert (NativeFunctionsModule_SpecHttpsCallableData)
+ (RCTManagedPointer *)JS_NativeFunctionsModule_SpecHttpsCallableData:(id)json;
@end
namespace JS {
  namespace NativeFunctionsModule {
    struct SpecHttpsCallableOptions {
      std::optional<double> timeout() const;

      SpecHttpsCallableOptions(NSDictionary *const v) : _v(v) {}
    private:
      NSDictionary *_v;
    };
  }
}

@interface RCTCxxConvert (NativeFunctionsModule_SpecHttpsCallableOptions)
+ (RCTManagedPointer *)JS_NativeFunctionsModule_SpecHttpsCallableOptions:(id)json;
@end
namespace JS {
  namespace NativeFunctionsModule {
    struct SpecHttpsCallableFromUrlData {
      id<NSObject> data() const;

      SpecHttpsCallableFromUrlData(NSDictionary *const v) : _v(v) {}
    private:
      NSDictionary *_v;
    };
  }
}

@interface RCTCxxConvert (NativeFunctionsModule_SpecHttpsCallableFromUrlData)
+ (RCTManagedPointer *)JS_NativeFunctionsModule_SpecHttpsCallableFromUrlData:(id)json;
@end
namespace JS {
  namespace NativeFunctionsModule {
    struct SpecHttpsCallableFromUrlOptions {
      std::optional<double> timeout() const;

      SpecHttpsCallableFromUrlOptions(NSDictionary *const v) : _v(v) {}
    private:
      NSDictionary *_v;
    };
  }
}

@interface RCTCxxConvert (NativeFunctionsModule_SpecHttpsCallableFromUrlOptions)
+ (RCTManagedPointer *)JS_NativeFunctionsModule_SpecHttpsCallableFromUrlOptions:(id)json;
@end
@protocol NativeFunctionsModuleSpec <RCTBridgeModule, RCTTurboModule>

- (void)httpsCallable:(NSString *)appName
               region:(NSString *)region
         emulatorHost:(NSString * _Nullable)emulatorHost
         emulatorPort:(double)emulatorPort
                 name:(NSString *)name
                 data:(JS::NativeFunctionsModule::SpecHttpsCallableData &)data
              options:(JS::NativeFunctionsModule::SpecHttpsCallableOptions &)options
              resolve:(RCTPromiseResolveBlock)resolve
               reject:(RCTPromiseRejectBlock)reject;
- (void)httpsCallableFromUrl:(NSString *)appName
                      region:(NSString *)region
                emulatorHost:(NSString * _Nullable)emulatorHost
                emulatorPort:(double)emulatorPort
                         url:(NSString *)url
                        data:(JS::NativeFunctionsModule::SpecHttpsCallableFromUrlData &)data
                     options:(JS::NativeFunctionsModule::SpecHttpsCallableFromUrlOptions &)options
                     resolve:(RCTPromiseResolveBlock)resolve
                      reject:(RCTPromiseRejectBlock)reject;

@end

@interface NativeFunctionsModuleSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeFunctionsModule'
   */
  class JSI_EXPORT NativeFunctionsModuleSpecJSI : public ObjCTurboModule {
  public:
    NativeFunctionsModuleSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react
inline id<NSObject> JS::NativeFunctionsModule::SpecHttpsCallableData::data() const
{
  id const p = _v[@"data"];
  return p;
}
inline std::optional<double> JS::NativeFunctionsModule::SpecHttpsCallableOptions::timeout() const
{
  id const p = _v[@"timeout"];
  return RCTBridgingToOptionalDouble(p);
}
inline id<NSObject> JS::NativeFunctionsModule::SpecHttpsCallableFromUrlData::data() const
{
  id const p = _v[@"data"];
  return p;
}
inline std::optional<double> JS::NativeFunctionsModule::SpecHttpsCallableFromUrlOptions::timeout() const
{
  id const p = _v[@"timeout"];
  return RCTBridgingToOptionalDouble(p);
}
NS_ASSUME_NONNULL_END
#endif // NativeFunctionsModule_H
