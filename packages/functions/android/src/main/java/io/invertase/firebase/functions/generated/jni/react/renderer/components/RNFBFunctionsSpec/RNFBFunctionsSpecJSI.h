/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/TurboModule.h>
#include <react/bridging/Bridging.h>

namespace facebook::react {


  class JSI_EXPORT NativeFunctionsModuleCxxSpecJSI : public TurboModule {
protected:
  NativeFunctionsModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
  virtual jsi::Value httpsCallable(jsi::Runtime &rt, std::optional<jsi::String> emulatorHost, double emulatorPort, jsi::String name, jsi::Object data, jsi::Object options) = 0;
  virtual jsi::Value httpsCallableFromUrl(jsi::Runtime &rt, std::optional<jsi::String> emulatorHost, double emulatorPort, jsi::String url, jsi::Object data, jsi::Object options) = 0;

};

template <typename T>
class JSI_EXPORT NativeFunctionsModuleCxxSpec : public TurboModule {
public:
  jsi::Value create(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
    return delegate_.create(rt, propName);
  }

  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override {
    return delegate_.getPropertyNames(runtime);
  }

  static constexpr std::string_view kModuleName = "NativeFunctionsModule";

protected:
  NativeFunctionsModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
    : TurboModule(std::string{NativeFunctionsModuleCxxSpec::kModuleName}, jsInvoker),
      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}


private:
  class Delegate : public NativeFunctionsModuleCxxSpecJSI {
  public:
    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
      NativeFunctionsModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {

    }

    jsi::Value httpsCallable(jsi::Runtime &rt, std::optional<jsi::String> emulatorHost, double emulatorPort, jsi::String name, jsi::Object data, jsi::Object options) override {
      static_assert(
          bridging::getParameterCount(&T::httpsCallable) == 6,
          "Expected httpsCallable(...) to have 6 parameters");

      return bridging::callFromJs<jsi::Value>(
          rt, &T::httpsCallable, jsInvoker_, instance_, std::move(emulatorHost), std::move(emulatorPort), std::move(name), std::move(data), std::move(options));
    }
    jsi::Value httpsCallableFromUrl(jsi::Runtime &rt, std::optional<jsi::String> emulatorHost, double emulatorPort, jsi::String url, jsi::Object data, jsi::Object options) override {
      static_assert(
          bridging::getParameterCount(&T::httpsCallableFromUrl) == 6,
          "Expected httpsCallableFromUrl(...) to have 6 parameters");

      return bridging::callFromJs<jsi::Value>(
          rt, &T::httpsCallableFromUrl, jsInvoker_, instance_, std::move(emulatorHost), std::move(emulatorPort), std::move(url), std::move(data), std::move(options));
    }

  private:
    friend class NativeFunctionsModuleCxxSpec;
    T *instance_;
  };

  Delegate delegate_;
};

} // namespace facebook::react
