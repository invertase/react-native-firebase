buildscript {
  // The Android Gradle plugin is only required when opening the android folder stand-alone.
  // This avoids unnecessary downloads and potential conflicts when the library is included as a
  // module dependency in an application project.
  if (project == rootProject) {
    repositories {
      google()
      jcenter()
    }

    dependencies {
      classpath("com.android.tools.build:gradle:3.5.2")
    }
  }
}

plugins {
  id "io.invertase.gradle.build" version "1.4"
}

project.ext {
  set('react-native', [
    versions: [
      android : [
        minSdk    : 16,
        targetSdk : 28,
        compileSdk: 28,
        // optional as gradle.buildTools comes with one by default
        // overriding here though to match the version RN uses
        buildTools: "28.0.3"
      ],

      firebase: [
        bom: "24.1.0",
      ],
    ],
  ])
}

apply from: file("./../../app/android/firebase-json.gradle")

def autoInitEnabled = "true"
def notificationChannelId = ""
def defaultNotificationColor = "@color/white";
def notificationColor = defaultNotificationColor


if (rootProject.ext && rootProject.ext.firebaseJson) {
  if (rootProject.ext.firebaseJson.isFlagEnabled("messaging_auto_init_enabled") == false) {
    autoInitEnabled = "false"
  }
  notificationChannelId = rootProject.ext.firebaseJson.getStringValue("messaging_android_notification_channel_id", "")
  notificationColor = rootProject.ext.firebaseJson.getStringValue("messaging_android_notification_color", defaultNotificationColor)
}

android {
  defaultConfig {
    multiDexEnabled true
    manifestPlaceholders = [
      firebaseJsonAutoInitEnabled: autoInitEnabled,
      firebaseJsonNotificationChannelId: notificationChannelId,
      firebaseJsonNotificationColor: notificationColor
    ]
  }
  lintOptions {
    disable 'GradleCompatible'
    abortOnError false
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  google()
  jcenter()
}

dependencies {
  if (findProject(':@react-native-firebase_app')) {
    api project(':@react-native-firebase_app')
  } else if (findProject(':react-native-firebase_app')) {
    api project(':react-native-firebase_app')
  } else {
    throw new GradleException('Could not find the react-native-firebase/app package, have you installed it?')
  }
  implementation platform("com.google.firebase:firebase-bom:${ReactNative.ext.getVersion("firebase", "bom")}")
  implementation "com.google.firebase:firebase-messaging"
}

ReactNative.shared.applyPackageVersion()
ReactNative.shared.applyDefaultExcludes()
ReactNative.module.applyAndroidVersions()
ReactNative.module.applyReactNativeDependency("api")
