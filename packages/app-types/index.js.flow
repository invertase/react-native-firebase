/*
 * Copyright (c) 2016-present Invertase Limited & Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this library except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
export type ReactNativeFirebaseModuleAndStatics<M, S = {}> = {
  (): M,
  +SDK_VERSION: string,
} & S;

export type ReactNativeFirebaseModuleAndStaticsWithApp<M, S = {}> = {
  (): M,
  +SDK_VERSION: string,
} & S;

export type FirebaseOptions = {
  appId: string,
  apiKey?: string,
  authDomain?: string,
  databaseURL: string,
  projectId: string,
  gaTrackingId?: string,
  storageBucket: string,
  messagingSenderId: string,

  /**
   * iOS only
   */
  clientId?: string,

  /**
   * iOS only
   */
  androidClientId?: string,

  /**
   * iOS only
   */
  deepLinkURLScheme?: string,
  [name: string]: any,
};

export interface FirebaseAppConfig {
  name?: string;
  automaticDataCollectionEnabled?: boolean;
}

export interface FirebaseApp {
  +name: string;
  +options: FirebaseOptions;
  delete(): Promise<void>;
}

export interface ReactNativeFirebaseNamespace {
  initializeApp(options: FirebaseOptions, config?: FirebaseAppConfig): FirebaseApp;
  initializeApp(options: FirebaseOptions, name?: string): FirebaseApp;

  app: {
    (name?: string): FirebaseApp,
  };

  apps: FirebaseApp[];

  +SDK_VERSION: string;
}

export interface ReactNativeFirebaseModule {
  app: FirebaseApp;
}
