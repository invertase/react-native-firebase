buildscript {
  ext.minSdkVersion = 21
  ext.compileSdkVersion = 31
  ext.targetSdkVersion = 31
  ext.ndkVersion = '21.4.7075529'

  ext.kotlinVersion = '1.6.0' // https://kotlinlang.org/releases.html
  ext.supportLibVersion = '1.7.0' // this maps to androidx.core https://developer.android.com/jetpack/androidx/releases/core
  //noinspection GradleDependency  https://github.com/facebook/react-native/pull/30061
  // Can bump to 1.4.0 when react-native 0.68 ships https://github.com/facebook/react-native/commit/e21f8ec34984551f87a306672160cc88e67e4793
  ext.appCompatVersion = '1.4.0' // this maps to androidx.appcompat https://developer.android.com/jetpack/androidx/releases/appcompat
  ext.supportVersion = ext.supportLibVersion
  ext.frescoVersion = '2.6.0' // https://github.com/facebook/fresco/releases
  ext.fragmentVersion = '1.4.0' // https://developer.android.com/jetpack/androidx/releases/fragment
  ext.vectordrawableVersion = '1.1.0' // https://developer.android.com/jetpack/androidx/releases/vectordrawable
  ext.androidxAnnotationVersion = '1.3.0' // https://developer.android.com/jetpack/androidx/releases/annotation
  ext.googlePlayServicesLocationVersion = '19.0.1' // https://developers.google.com/android/guides/setup
  ext.googlePlayServicesVersion = '18.0.1' // play-services-base
  ext.googlePlayServicesAuthVersion = '20.2.0' // play-services-auth
  ext.googlePlayServicesVisionVersion = '20.1.3' // play-services-vision
  ext.mediaCompatVersion = '1.4.3' // https://developer.android.com/jetpack/androidx/releases/media
  ext.supportV4Version = '1.0.0' // https://developer.android.com/jetpack/androidx/releases/legacy androidx.legacy:legacy-support-v4
  ext.swiperefreshlayoutVersion = '1.1.0' // https://developer.android.com/jetpack/androidx/releases/swiperefreshlayout

  // used to aggregate all modules for later reporting
  ext.firebaseModulePaths = []

  repositories {
    google()
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.gms:google-services:4.3.14' // https://developers.google.com/android/guides/google-services-plugin
    classpath 'com.android.tools.build:gradle:7.0.4'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath 'com.google.firebase:perf-plugin:1.4.2'
    classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.2'
    classpath 'com.google.firebase:firebase-appdistribution-gradle:3.1.0'
  }
}

allprojects {
  println "${project.name} ${projectDir} ${rootDir}"

  repositories {
    exclusiveContent {
      // We get React Native's Android binaries exclusively through npm,
      // from a local Maven repo inside node_modules/react-native/.
      // (The use of exclusiveContent prevents looking elsewhere like Maven Central
      // and potentially getting a wrong version.)
      filter {
        includeGroup "com.facebook.react"
      }
      forRepository {
        maven {
          url "$rootDir/../node_modules/react-native/android"
        }
      }
    }

    maven {
      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
      url("$rootDir/../node_modules/react-native/android")
    }
    maven {
      // Android JSC is installed from npm
      url("$rootDir/../node_modules/jsc-android/dist")
    }
    // maven {
    //   // Detox as an .aar file (we're going to use it as a compile dependency though, to patch it)
    //   url "$rootDir/../node_modules/detox/Detox-android"
    // }
    mavenCentral()
    google()
    maven { url 'https://www.jitpack.io' }
  }
}

// collect all our modules for reporting
subprojects.forEach { project ->
  if (project.name.contains('react-native-firebase')) {
    rootProject.ext.firebaseModulePaths << project.projectDir
  }
}

subprojects {
  task listAllDependencies(type: DependencyReportTask) { }

  // Force all subprojects to use one and only one set of versions
  ext {
    compileSdk = rootProject.ext.compileSdkVersion
    minSdk = rootProject.ext.minSdkVersion
    targetSdk = rootProject.ext.targetSdkVersion
  }
  afterEvaluate { project ->
    if (!project.name.equalsIgnoreCase('app')
      && project.hasProperty('android')) {
      android {
        compileSdkVersion compileSdk
        defaultConfig {
          minSdkVersion minSdk
          targetSdkVersion targetSdk
        }
      }
      }

    // Configure testing settings - if set in module build.gradle files they affect library consumers
    if (project.name.contains('react-native-firebase')
      && project.hasProperty('android')) {
      android {
        // Instrument all our modules for coverage generation
        buildTypes.debug.testCoverageEnabled true
        jacoco.version '0.8.8'
        testOptions.unitTests.includeAndroidResources = true

        // Make sure our project are run through basic lint checks
        lintOptions {
          abortOnError = true
          warningsAsErrors false
          lintConfig file('./lint.xml')
          ignore 'UnknownNullness', 'SyntheticAccessor', 'LogConditional'
          checkReleaseBuilds = true
          checkAllWarnings true
          showAll true
          textReport true
          textOutput 'stdout'
          htmlReport true
        }
      }
    }
  }
}
