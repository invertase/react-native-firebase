buildscript {
  ext.kotlinVersion = '1.4.31'
  ext.supportLibVersion = "1.3.2" // this maps to androidx.core https://developer.android.com/jetpack/androidx/releases/core
  ext.appCompatVersion = "1.2.0" // this maps to androidx.appcompat https://developer.android.com/jetpack/androidx/releases/appcompat
  ext.supportVersion = ext.supportLibVersion
  //noinspection GradleDependency  https://github.com/facebook/react-native/pull/30061
  // We will be able to bump to 2.3.0 with react-native 0.65.0+, fresco 2.4.0 is out maybe possible
  ext.frescoVersion = "2.2.0" // https://github.com/facebook/fresco/releases
  ext.fragmentVersion = "1.3.0" // https://developer.android.com/jetpack/androidx/releases/fragment
  ext.vectordrawableVersion = "1.1.0" // https://developer.android.com/jetpack/androidx/releases/vectordrawable
  ext.androidxAnnotationVersion = "1.1.0" // https://developer.android.com/jetpack/androidx/releases/annotation
  ext.googlePlayServicesLocationVersion = "18.0.0" // https://developers.google.com/android/guides/setup
  ext.googlePlayServicesVersion = "17.6.0" // play-services-base
  ext.googlePlayServicesAuthVersion = "19.0.0" // play-services-auth
  ext.googlePlayServicesVisionVersion = "20.1.3" // play-services-vision
  ext.mediaCompatVersion = "1.2.1" // https://developer.android.com/jetpack/androidx/releases/media
  ext.supportV4Version = "1.0.0" // https://developer.android.com/jetpack/androidx/releases/legacy androidx.legacy:legacy-support-v4
  ext.swiperefreshlayoutVersion = "1.1.0" // https://developer.android.com/jetpack/androidx/releases/swiperefreshlayout

  repositories {
    google()
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.gms:google-services:4.3.4'
    classpath 'com.android.tools.build:gradle:4.1.2'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath 'com.google.firebase:perf-plugin:1.3.5'
    classpath 'com.google.firebase:firebase-crashlytics-gradle:2.5.1'
  }
}

allprojects {
  println "${project.name} ${projectDir} ${rootDir}"

  repositories {
    google()
    mavenLocal()
    maven {
      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
      url("$rootDir/../node_modules/react-native/android")
    }
    maven {
      // Android JSC is installed from npm
      url("$rootDir/../node_modules/jsc-android/dist")
    }
    // maven {
    //   // Detox as an .aar file (we're going to use it as a compile dependency though, to patch it)
    //   url "$rootDir/../node_modules/detox/Detox-android"
    // }
    jcenter()
  }

}

subprojects {
  task listAllDependencies(type: DependencyReportTask) {}
  ext {
    compileSdk = 30
    buildTools = "30.0.2"
    minSdk = 21
    targetSdk = 30
  }

  afterEvaluate { project ->
    if (!project.name.equalsIgnoreCase("app")
      && project.hasProperty("android")) {
      android {
        compileSdkVersion compileSdk
        buildToolsVersion buildTools
        defaultConfig {
          minSdkVersion minSdk
          targetSdkVersion targetSdk
        }
      }
    }
  }
}
