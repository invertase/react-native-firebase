diff --git a/node_modules/detox/android/detox/build.gradle b/node_modules/detox/android/detox/build.gradle
index 9185a26..9582988 100644
--- a/node_modules/detox/android/detox/build.gradle
+++ b/node_modules/detox/android/detox/build.gradle
@@ -13,6 +13,7 @@ def _kotlinVersion = _ext.has('detoxKotlinVersion') ? _ext.detoxKotlinVersion :
 def _kotlinStdlib = _ext.has('detoxKotlinStdlib') ? _ext.detoxKotlinStdlib : 'kotlin-stdlib-jdk8'
 
 android {
+    namespace 'com.wix.detox'
     compileSdkVersion _compileSdkVersion
     buildToolsVersion _buildToolsVersion
 
diff --git a/node_modules/detox/android/detox/src/full/java/com/wix/detox/espresso/common/SliderHelper.kt b/node_modules/detox/android/detox/src/full/java/com/wix/detox/espresso/common/SliderHelper.kt
index af77cda..253cfb8 100644
--- a/node_modules/detox/android/detox/src/full/java/com/wix/detox/espresso/common/SliderHelper.kt
+++ b/node_modules/detox/android/detox/src/full/java/com/wix/detox/espresso/common/SliderHelper.kt
@@ -4,12 +4,10 @@ import android.view.View
 import androidx.appcompat.widget.AppCompatSeekBar
 import com.facebook.react.bridge.JavaOnlyMap
 import com.facebook.react.uimanager.ReactStylesDiffMap
-import com.facebook.react.views.slider.ReactSlider
 import com.wix.detox.common.DetoxErrors.DetoxIllegalStateException
 import com.wix.detox.espresso.action.common.ReflectUtils
 import org.joor.Reflect
 
-private const val CLASS_REACT_SLIDER_LEGACY = "com.facebook.react.views.slider.ReactSlider"
 private const val CLASS_REACT_SLIDER_COMMUNITY = "com.reactnativecommunity.slider.ReactSlider"
 
 abstract class SliderHelper(protected val slider: AppCompatSeekBar) {
@@ -48,8 +46,6 @@ abstract class SliderHelper(protected val slider: AppCompatSeekBar) {
 
         fun maybeCreate(view: View): SliderHelper? =
             when {
-                ReflectUtils.isAssignableFrom(view, CLASS_REACT_SLIDER_LEGACY)
-                   -> LegacySliderHelper(view as ReactSlider)
                 ReflectUtils.isAssignableFrom(view, CLASS_REACT_SLIDER_COMMUNITY)
                     -> CommunitySliderHelper(view as AppCompatSeekBar)
                 else
@@ -58,15 +54,6 @@ abstract class SliderHelper(protected val slider: AppCompatSeekBar) {
     }
 }
 
-private class LegacySliderHelper(slider: AppCompatSeekBar): SliderHelper(slider) {
-    override fun setProgressJS(valueJS: Double) {
-        val reactSliderManager = com.facebook.react.views.slider.ReactSliderManager()
-        reactSliderManager.updateProperties(slider as ReactSlider, buildStyles("value", valueJS))
-    }
-
-    private fun buildStyles(vararg keysAndValues: Any) = ReactStylesDiffMap(JavaOnlyMap.of(*keysAndValues))
-}
-
 private class CommunitySliderHelper(slider: AppCompatSeekBar): SliderHelper(slider) {
     override fun setProgressJS(valueJS: Double) {
         val reactSliderManager = Class.forName("com.reactnativecommunity.slider.ReactSliderManager").newInstance()
diff --git a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt
index ad3229f..c5e56e5 100644
--- a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt
+++ b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt
@@ -25,13 +25,14 @@ class TimersIdlingResource @JvmOverloads constructor(
     }
 
     override fun checkIdle(): Boolean {
-        return interrogationStrategy.isIdleNow().also { result ->
-            if (result) {
-                notifyIdle()
-            } else {
-                getChoreographer().postFrameCallback(this@TimersIdlingResource)
-            }
-        }
+        return true
+        // return interrogationStrategy.isIdleNow().also { result ->
+        //     if (result) {
+        //         notifyIdle()
+        //     } else {
+        //         getChoreographer().postFrameCallback(this@TimersIdlingResource)
+        //     }
+        // }
     }
 
     override fun doFrame(frameTimeNanos: Long) {
diff --git a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt
index fb4b820..d2dc87d 100644
--- a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt
+++ b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt
@@ -28,36 +28,39 @@ class UIModuleIdlingResource(private val reactContext: ReactContext)
                 .build()
 
     override fun checkIdle(): Boolean {
-        try {
-            if (!reactContext.hasActiveCatalystInstance()) {
-                Log.e(LOG_TAG, "No active CatalystInstance. Should never see this.")
-                return false
-            }
+        // try {
+        //     if (!reactContext.hasActiveCatalystInstance()) {
+        //         Log.e(LOG_TAG, "No active CatalystInstance. Should never see this.")
+        //         return false
+        //     }
 
-            if (RNHelpers.getNativeModule(reactContext, "com.facebook.react.uimanager.UIManagerModule") == null) {
-                notifyIdle()
-                return true
-            }
+        //     if (RNHelpers.getNativeModule(reactContext, "com.facebook.react.uimanager.UIManagerModule") == null) {
+        //         notifyIdle()
+        //         return true
+        //     }
 
-            val runnablesAreEmpty = uiManagerModuleReflected.isRunnablesListEmpty()
-            val nonBatchesOpsEmpty = uiManagerModuleReflected.isNonBatchOpsEmpty()
-            var operationQueueEmpty = uiManagerModuleReflected.isOperationQueueEmpty()
+        //     val runnablesAreEmpty = uiManagerModuleReflected.isRunnablesListEmpty()
+        //     val nonBatchesOpsEmpty = uiManagerModuleReflected.isNonBatchOpsEmpty()
+        //     var operationQueueEmpty = uiManagerModuleReflected.isOperationQueueEmpty()
 
-            if (!operationQueueEmpty) {
-                operationQueueEmpty = rn66workaround.isScarceUISwitchCommandStuckInQueue(uiManagerModuleReflected)
-            }
+        //     if (!operationQueueEmpty) {
+        //         operationQueueEmpty = rn66workaround.isScarceUISwitchCommandStuckInQueue(uiManagerModuleReflected)
+        //     }
 
-            if (runnablesAreEmpty && nonBatchesOpsEmpty && operationQueueEmpty) {
-                notifyIdle()
-                return true
-            }
+        //     if (runnablesAreEmpty && nonBatchesOpsEmpty && operationQueueEmpty) {
+        //         notifyIdle()
+        //         return true
+        //     }
 
-            Log.i(LOG_TAG, "UIManagerModule is busy")
-            Choreographer.getInstance().postFrameCallback(this)
-            return false
-        } catch (e: ReflectException) {
-            Log.e(LOG_TAG, "Can't set up RN UIModule listener", e.cause)
-        }
+        //     Log.i(LOG_TAG, "UIManagerModule is busy")
+        //     Log.w(LOG_TAG, "UIManagerModule is busy but damn the torpedoes!");
+        //     notifyIdle()
+        //     return true;
+        //     // Choreographer.getInstance().postFrameCallback(this);
+        //     // return false;
+        // } catch (e: ReflectException) {
+        //     Log.e(LOG_TAG, "Can't set up RN UIModule listener", e.cause)
+        // }
         notifyIdle()
         return true
     }
diff --git a/node_modules/detox/src/devices/common/drivers/ios/tools/AppleSimUtils.js b/node_modules/detox/src/devices/common/drivers/ios/tools/AppleSimUtils.js
index 585c99b..46e4b83 100644
--- a/node_modules/detox/src/devices/common/drivers/ios/tools/AppleSimUtils.js
+++ b/node_modules/detox/src/devices/common/drivers/ios/tools/AppleSimUtils.js
@@ -272,7 +272,7 @@ class AppleSimUtils {
       // want to make sure it isn't now.
       if (err.code === 3 &&
           (err.stderr.includes(`the app is not currently running`) ||
-           err.stderr.includes(`The operation couldnâ€™t be completed. found nothing to terminate`))) {
+           err.stderr.includes(`found nothing to terminate`))) {
         return;
       }
 