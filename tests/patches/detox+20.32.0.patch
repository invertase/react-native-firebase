diff --git a/node_modules/detox/android/detox/build.gradle b/node_modules/detox/android/detox/build.gradle
index 660025b..831b97f 100644
--- a/node_modules/detox/android/detox/build.gradle
+++ b/node_modules/detox/android/detox/build.gradle
@@ -91,6 +91,9 @@ android {
 
         kotlinOptions {
             jvmTarget = '17'
+            freeCompilerArgs += [
+                "-opt-in=kotlin.ExperimentalStdlibApi"
+            ]
         }
     } else {
         compileOptions {
diff --git a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/network/NetworkIdlingResource.kt b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/network/NetworkIdlingResource.kt
index 69a20c2..2a50ee2 100644
--- a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/network/NetworkIdlingResource.kt
+++ b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/network/NetworkIdlingResource.kt
@@ -45,23 +45,6 @@ class NetworkIdlingResource(private val dispatcher: Dispatcher) : DetoxIdlingRes
 
     @Synchronized
     override fun checkIdle(): Boolean {
-        busyResources.clear()
-
-        val calls = dispatcher.runningCalls()
-        for (call in calls) {
-            val url = call.request().url.toString()
-
-            if (!isUrlBlacklisted(url)) {
-                busyResources.add(url)
-            }
-        }
-
-        if (busyResources.isNotEmpty()) {
-            Log.i(LOG_TAG, "Network is busy, with " + busyResources.size + " in-flight calls")
-            Choreographer.getInstance().postFrameCallback(this)
-            return false
-        }
-
         notifyIdle()
         return true
     }
diff --git a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt
index bd8c18e..f2d0642 100644
--- a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt
+++ b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt
@@ -27,15 +27,8 @@ class TimersIdlingResource @JvmOverloads constructor(
 
     @SuppressLint("VisibleForTests")
     override fun checkIdle(): Boolean {
-        val isIdle = !timingModule.hasActiveTimersInRange(BUSY_WINDOW_THRESHOLD)
-
-        if (isIdle) {
-            notifyIdle()
-        } else {
-            getChoreographer().postFrameCallback(this)
-        }
-
-        return isIdle
+        notifyIdle()
+        return true
     }
 
     override fun doFrame(frameTimeNanos: Long) {
diff --git a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt
index 2d36e31..df2f06a 100644
--- a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt
+++ b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt
@@ -24,32 +24,6 @@ class UIModuleIdlingResource(private val reactContext: ReactContext)
     }
 
     override fun checkIdle(): Boolean {
-        try {
-            if (!reactContext.hasActiveCatalystInstance()) {
-                Log.e(LOG_TAG, "No active CatalystInstance. Should never see this.")
-                return false
-            }
-
-            if (RNHelpers.getNativeModule(reactContext, "com.facebook.react.uimanager.UIManagerModule") == null) {
-                notifyIdle()
-                return true
-            }
-
-            val runnablesAreEmpty = uiManagerModuleReflected.isRunnablesListEmpty()
-            val nonBatchesOpsEmpty = uiManagerModuleReflected.isNonBatchOpsEmpty()
-            val operationQueueEmpty = uiManagerModuleReflected.isOperationQueueEmpty()
-
-            if (runnablesAreEmpty && nonBatchesOpsEmpty && operationQueueEmpty) {
-                notifyIdle()
-                return true
-            }
-
-            Log.i(LOG_TAG, "UIManagerModule is busy")
-            Choreographer.getInstance().postFrameCallback(this)
-            return false
-        } catch (e: ReflectException) {
-            Log.e(LOG_TAG, "Can't set up RN UIModule listener", e.cause)
-        }
         notifyIdle()
         return true
     }
