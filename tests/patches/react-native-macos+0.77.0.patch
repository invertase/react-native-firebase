diff --git a/node_modules/react-native-macos/Libraries/Blob/BlobManager.js b/node_modules/react-native-macos/Libraries/Blob/BlobManager.js
index f4c5ed3..7628f81 100644
--- a/node_modules/react-native-macos/Libraries/Blob/BlobManager.js
+++ b/node_modules/react-native-macos/Libraries/Blob/BlobManager.js
@@ -9,7 +9,7 @@
  */
 
 import type {BlobCollector, BlobData, BlobOptions} from './BlobTypes';
-
+import {fromByteArray} from 'base64-js';
 import NativeBlobModule from './NativeBlobModule';
 import invariant from 'invariant';
 
@@ -67,9 +67,11 @@ class BlobManager {
     const blobId = uuidv4();
     const items = parts.map(part => {
       if (part instanceof ArrayBuffer || ArrayBuffer.isView(part)) {
-        throw new Error(
-          "Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported",
-        );
+        return {
+          // $FlowFixMe[incompatible-cast]
+          data: fromByteArray(new Uint8Array((part))),
+          type: 'string',
+        };
       }
       if (part instanceof Blob) {
         return {
diff --git a/node_modules/react-native-macos/Libraries/Utilities/Platform.macos.js b/node_modules/react-native-macos/Libraries/Utilities/Platform.macos.js
index 3b1e7cd..e5a1274 100644
--- a/node_modules/react-native-macos/Libraries/Utilities/Platform.macos.js
+++ b/node_modules/react-native-macos/Libraries/Utilities/Platform.macos.js
@@ -84,7 +84,7 @@ const Platform: PlatformType = {
   },
   select: <T>(spec: PlatformSelectSpec<T>): T =>
     // $FlowFixMe[incompatible-return]
-    'ios' in spec ? spec.macos : 'native' in spec ? spec.native : spec.default,
+    'macos' in spec ? spec.macos : 'native' in spec ? spec.native : spec.default,
 };
 
 module.exports = Platform;
