diff --git a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/NetworkIdlingResource.java b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/NetworkIdlingResource.java
index 219010f..8ce37d0 100644
--- a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/NetworkIdlingResource.java
+++ b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/NetworkIdlingResource.java
@@ -95,23 +95,6 @@ public class NetworkIdlingResource extends DetoxBaseIdlingResource implements Ch
 
     @Override
     protected synchronized boolean checkIdle() {
-        busyResources.clear();
-
-        List<Call> calls = dispatcher.runningCalls();
-        for (Call call: calls) {
-            final String url = call.request().url().toString();
-
-            if (!isUrlBlacklisted(url)) {
-                busyResources.add(url);
-            }
-        }
-
-        if (!busyResources.isEmpty()) {
-            Log.i(LOG_TAG, "Network is busy, with " + busyResources.size() + " in-flight calls");
-            Choreographer.getInstance().postFrameCallback(this);
-            return false;
-        }
-
         notifyIdle();
         return true;
     }
diff --git a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt
index 126725a..db4f148 100644
--- a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt
+++ b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/timers/TimersIdlingResource.kt
@@ -21,13 +21,8 @@ class TimersIdlingResource @JvmOverloads constructor(
     }
 
     override fun checkIdle(): Boolean {
-        return interrogationStrategy.isIdleNow().also { result ->
-            if (result) {
-                notifyIdle()
-            } else {
-                getChoreographer().postFrameCallback(this@TimersIdlingResource)
-            }
-        }
+        notifyIdle()
+        return true
     }
 
     override fun doFrame(frameTimeNanos: Long) {
diff --git a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt
index 0722d49..9e72d2f 100644
--- a/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt
+++ b/node_modules/detox/android/detox/src/full/java/com/wix/detox/reactnative/idlingresources/uimodule/UIModuleIdlingResource.kt
@@ -26,36 +26,6 @@ class UIModuleIdlingResource(private val reactContext: ReactContext)
     }
 
     override fun checkIdle(): Boolean {
-        try {
-            if (!reactContext.hasActiveCatalystInstance()) {
-                Log.e(LOG_TAG, "No active CatalystInstance. Should never see this.")
-                return false
-            }
-
-            if (RNHelpers.getNativeModule(reactContext, "com.facebook.react.uimanager.UIManagerModule") == null) {
-                notifyIdle()
-                return true
-            }
-
-            val runnablesAreEmpty = uiManagerModuleReflected.isRunnablesListEmpty()
-            val nonBatchesOpsEmpty = uiManagerModuleReflected.isNonBatchOpsEmpty()
-            var operationQueueEmpty = uiManagerModuleReflected.isOperationQueueEmpty()
-
-            if (!operationQueueEmpty) {
-                operationQueueEmpty = rn66workaround.isScarceUISwitchCommandStuckInQueue(uiManagerModuleReflected)
-            }
-
-            if (runnablesAreEmpty && nonBatchesOpsEmpty && operationQueueEmpty) {
-                notifyIdle()
-                return true
-            }
-
-            Log.i(LOG_TAG, "UIManagerModule is busy")
-            Choreographer.getInstance().postFrameCallback(this)
-            return false
-        } catch (e: ReflectException) {
-            Log.e(LOG_TAG, "Can't set up RN UIModule listener", e.cause)
-        }
         notifyIdle()
         return true
     }
diff --git a/node_modules/detox/src/devices/common/drivers/ios/tools/AppleSimUtils.js b/node_modules/detox/src/devices/common/drivers/ios/tools/AppleSimUtils.js
index 3a8b7b8..ee3a965 100644
--- a/node_modules/detox/src/devices/common/drivers/ios/tools/AppleSimUtils.js
+++ b/node_modules/detox/src/devices/common/drivers/ios/tools/AppleSimUtils.js
@@ -398,9 +398,7 @@ class AppleSimUtils {
       // ```
       // This workaround is done to ignore the error above, as we do not care if the app was running before, we just
       // want to make sure it isn't now.
-      if (err.code === 3 &&
-          (err.stderr.includes(`the app is not currently running`) ||
-           err.stderr.includes(`found nothing to terminate`))) {
+      if (err.stderr.includes(`found nothing to terminate`)) {
         return;
       }
 
