require 'json'

# Settings to test various overrides if desired
appPackage = JSON.parse(File.read(File.join('..', '..', 'node_modules', '@react-native-firebase', 'app', 'package.json')))
$FirebaseSDKVersion = appPackage['sdkVersions']['ios']['firebase']
#$FirebaseSDKVersion = '7.7.0' # https://firebase.google.com/support/release-notes/ios
Pod::UI.puts "react-native-firebase/tests: Using Firebase SDK version '#{$FirebaseSDKVersion}'"
#$RNFirebaseAsStaticFramework = false # toggle this to true (and set 'use_frameworks!' below to test static frameworks)

# Versions used below, for quick reference / outdated+upgrade checks
$iOSMinimumDeployVersion = '10.0'

platform :ios, $iOSMinimumDeployVersion


require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

target 'testing' do
  # set this and toggle '$RNFirebaseAsStaticFramework' above to test static frameworks)
  # use_frameworks!

  config = use_native_modules!
  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )

  # Use pre-compiled firestore frameworks to optimize compile time. But make sure there are not leveldb conflicts.
  $FirebaseFirestoreExcludeLeveldb = true
  pod 'FirebaseFirestore', :git => 'https://github.com/invertase/firestore-ios-sdk-frameworks.git', :tag => $FirebaseSDKVersion

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  #use_flipper!()

  post_install do |installer|
    react_native_post_install(installer)

    # We support a smaller range of deployment than some libraries, eliminate related noise
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = $iOSMinimumDeployVersion
      end
    end
  end
end
